{"version":3,"file":"parameters-bundle.css.11496d28.mjs","sources":["../node_modules/@ui5/webcomponents-base/dist/util/whenDOMReady.js","../node_modules/@ui5/webcomponents-base/dist/generated/css/FontFace.css.js","../node_modules/@ui5/webcomponents-base/dist/generated/css/OverrideFontFace.css.js","../node_modules/@ui5/webcomponents-base/dist/FontFace.js","../node_modules/@ui5/webcomponents-base/dist/generated/css/SystemCSSVars.css.js","../node_modules/@ui5/webcomponents-base/dist/SystemCSSVars.js","../node_modules/@ui5/webcomponents-base/dist/Boot.js","../node_modules/@ui5/webcomponents-base/dist/util/StringHelper.js","../node_modules/@ui5/webcomponents-base/dist/util/SlotsHelper.js","../node_modules/@ui5/webcomponents-base/dist/UI5ElementMetadata.js","../node_modules/@ui5/webcomponents-base/dist/StaticArea.js","../node_modules/@ui5/webcomponents-base/dist/theming/CustomStyle.js","../node_modules/@ui5/webcomponents-base/dist/theming/getStylesString.js","../node_modules/@ui5/webcomponents-base/dist/theming/getEffectiveStyle.js","../node_modules/@ui5/webcomponents-base/dist/theming/getConstructableStyle.js","../node_modules/@ui5/webcomponents-base/dist/updateShadowRoot.js","../node_modules/@ui5/webcomponents-base/dist/util/getEffectiveContentDensity.js","../node_modules/@ui5/webcomponents-base/dist/util/getDesigntimePropertyAsArray.js","../node_modules/@ui5/webcomponents-base/dist/config/RTL.js","../node_modules/@ui5/webcomponents-base/dist/locale/getEffectiveDir.js","../node_modules/@ui5/webcomponents-base/dist/StaticAreaItem.js","../node_modules/@ui5/webcomponents-base/dist/DOMObserver.js","../node_modules/@ui5/webcomponents-base/dist/config/NoConflict.js","../node_modules/@ui5/webcomponents-base/dist/util/isValidPropertyName.js","../node_modules/@ui5/webcomponents-base/dist/util/arraysAreEqual.js","../node_modules/@ui5/webcomponents-base/dist/renderer/executeTemplate.js","../node_modules/@ui5/webcomponents-base/dist/UI5Element.js","../node_modules/@ui5/webcomponents-base/dist/decorators/customElement.js","../node_modules/@ui5/webcomponents-base/dist/decorators/property.js","../node_modules/lit-html/directives/if-defined.js","../node_modules/lit-html/directives/unsafe-html.js","../node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js","../node_modules/@ui5/webcomponents-theming/dist/generated/themes/sap_fiori_3/parameters-bundle.css.js"],"sourcesContent":["const whenDOMReady = () => {\n    return new Promise(resolve => {\n        if (document.body) {\n            resolve();\n        }\n        else {\n            document.addEventListener(\"DOMContentLoaded\", () => {\n                resolve();\n            });\n        }\n    });\n};\nexport default whenDOMReady;\n//# sourceMappingURL=whenDOMReady.js.map","const styleData = {\n    packageName: \"@ui5/webcomponents-base\",\n    fileName: \"FontFace.css\",\n    content: `@font-face{font-family:\"72\";font-style:normal;font-weight:400;src:local(\"72\"),url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_fiori_3/fonts/72-Regular.woff2?ui5-webcomponents) format(\"woff2\")}@font-face{font-family:\"72full\";font-style:normal;font-weight:400;src:local('72-full'),url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_fiori_3/fonts/72-Regular-full.woff2?ui5-webcomponents) format(\"woff2\")}@font-face{font-family:\"72\";font-style:normal;font-weight:700;src:local('72-Bold'),url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_fiori_3/fonts/72-Bold.woff2?ui5-webcomponents) format(\"woff2\")}@font-face{font-family:\"72full\";font-style:normal;font-weight:700;src:local('72-Bold-full'),url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_fiori_3/fonts/72-Bold-full.woff2?ui5-webcomponents) format(\"woff2\")}@font-face{font-family:'72-Bold';font-style:normal;src:local('72-Bold'),url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_fiori_3/fonts/72-Bold.woff2?ui5-webcomponents) format(\"woff2\")}@font-face{font-family:'72-Boldfull';font-style:normal;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_fiori_3/fonts/72-Bold-full.woff2?ui5-webcomponents) format(\"woff2\")}@font-face{font-family:'72-Light';font-style:normal;src:local('72-Light'),url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_fiori_3/fonts/72-Light.woff2?ui5-webcomponents) format(\"woff2\")}@font-face{font-family:'72-Lightfull';font-style:normal;src:url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_fiori_3/fonts/72-Light-full.woff2?ui5-webcomponents) format(\"woff2\")}@font-face{font-family:\"72Black\";font-style:bold;font-weight:900;src:local('72Black'),url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_horizon/fonts/72-Black.woff2?ui5-webcomponents) format(\"woff2\")}`,\n};\nexport default styleData;\n//# sourceMappingURL=FontFace.css.js.map","const styleData = {\n    packageName: \"@ui5/webcomponents-base\",\n    fileName: \"OverrideFontFace.css\",\n    content: `@font-face{font-family:'72override';unicode-range:U+0102-0103,U+01A0-01A1,U+01AF-01B0,U+1EA0-1EB7,U+1EB8-1EC7,U+1EC8-1ECB,U+1ECC-1EE3,U+1EE4-1EF1,U+1EF4-1EF7;src:local('Arial'),local('Helvetica'),local('sans-serif')}`,\n};\nexport default styleData;\n//# sourceMappingURL=OverrideFontFace.css.js.map","import { hasStyle, createStyle } from \"./ManagedStyles.js\";\nimport { getFeature } from \"./FeaturesRegistry.js\";\nimport fontFaceCSS from \"./generated/css/FontFace.css.js\";\nimport overrideFontFaceCSS from \"./generated/css/OverrideFontFace.css.js\";\nconst insertFontFace = () => {\n    const openUI5Support = getFeature(\"OpenUI5Support\");\n    // Only set the main font if there is no OpenUI5 support, or there is, but OpenUI5 is not loaded\n    if (!openUI5Support || !openUI5Support.isLoaded()) {\n        insertMainFontFace();\n    }\n    // Always set the override font - OpenUI5 in CSS Vars mode does not set it, unlike the main font\n    insertOverrideFontFace();\n};\nconst insertMainFontFace = () => {\n    if (!hasStyle(\"data-ui5-font-face\")) {\n        createStyle(fontFaceCSS, \"data-ui5-font-face\");\n    }\n};\nconst insertOverrideFontFace = () => {\n    if (!hasStyle(\"data-ui5-font-face-override\")) {\n        createStyle(overrideFontFaceCSS, \"data-ui5-font-face-override\");\n    }\n};\nexport default insertFontFace;\n//# sourceMappingURL=FontFace.js.map","const styleData = {\n    packageName: \"@ui5/webcomponents-base\",\n    fileName: \"SystemCSSVars.css\",\n    content: `:root{--_ui5_content_density:cozy}.sapUiSizeCompact,.ui5-content-density-compact,[data-ui5-compact-size]{--_ui5_content_density:compact}[dir=rtl]{--_ui5_dir:rtl}[dir=ltr]{--_ui5_dir:ltr}`,\n};\nexport default styleData;\n//# sourceMappingURL=SystemCSSVars.css.js.map","import { hasStyle, createStyle } from \"./ManagedStyles.js\";\nimport systemCSSVars from \"./generated/css/SystemCSSVars.css.js\";\nconst insertSystemCSSVars = () => {\n    if (!hasStyle(\"data-ui5-system-css-vars\")) {\n        createStyle(systemCSSVars, \"data-ui5-system-css-vars\");\n    }\n};\nexport default insertSystemCSSVars;\n//# sourceMappingURL=SystemCSSVars.js.map","import whenDOMReady from \"./util/whenDOMReady.js\";\nimport EventProvider from \"./EventProvider.js\";\nimport insertFontFace from \"./FontFace.js\";\nimport insertSystemCSSVars from \"./SystemCSSVars.js\";\nimport { getTheme } from \"./config/Theme.js\";\nimport applyTheme from \"./theming/applyTheme.js\";\nimport { registerCurrentRuntime } from \"./Runtimes.js\";\nimport { getFeature } from \"./FeaturesRegistry.js\";\nimport { attachThemeRegistered } from \"./theming/ThemeRegistered.js\";\nlet booted = false;\nlet bootPromise;\nconst eventProvider = new EventProvider();\n/**\n * Attaches a callback that will be executed after boot finishes.\n * <b>Note:</b> If the framework already booted, the callback will be immediately executed.\n * @public\n * @param { Function } listener\n */\nconst attachBoot = (listener) => {\n    if (!booted) {\n        eventProvider.attachEvent(\"boot\", listener);\n        return;\n    }\n    listener();\n};\nconst boot = async () => {\n    if (bootPromise !== undefined) {\n        return bootPromise;\n    }\n    const bootExecutor = async (resolve) => {\n        if (typeof document === \"undefined\") {\n            resolve();\n            return;\n        }\n        attachThemeRegistered(onThemeRegistered);\n        registerCurrentRuntime();\n        const openUI5Support = getFeature(\"OpenUI5Support\");\n        const isOpenUI5Loaded = openUI5Support ? openUI5Support.isLoaded() : false;\n        const f6Navigation = getFeature(\"F6Navigation\");\n        if (openUI5Support) {\n            await openUI5Support.init();\n        }\n        if (f6Navigation && !isOpenUI5Loaded) {\n            f6Navigation.init();\n        }\n        await whenDOMReady();\n        await applyTheme(getTheme());\n        openUI5Support && openUI5Support.attachListeners();\n        insertFontFace();\n        insertSystemCSSVars();\n        resolve();\n        booted = true;\n        await eventProvider.fireEventAsync(\"boot\");\n    };\n    bootPromise = new Promise(bootExecutor);\n    return bootPromise;\n};\n/**\n * Callback, executed after theme properties registration\n * to apply the newly registered theme.\n * @private\n * @param { string } theme\n */\nconst onThemeRegistered = (theme) => {\n    const currentTheme = getTheme();\n    if (booted && theme === currentTheme) {\n        applyTheme(currentTheme);\n    }\n};\nexport { boot, attachBoot, };\n//# sourceMappingURL=Boot.js.map","const kebabToCamelMap = new Map();\nconst camelToKebabMap = new Map();\nconst kebabToCamelCase = (string) => {\n    if (!kebabToCamelMap.has(string)) {\n        const result = toCamelCase(string.split(\"-\"));\n        kebabToCamelMap.set(string, result);\n    }\n    return kebabToCamelMap.get(string);\n};\nconst camelToKebabCase = (string) => {\n    if (!camelToKebabMap.has(string)) {\n        const result = string.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n        camelToKebabMap.set(string, result);\n    }\n    return camelToKebabMap.get(string);\n};\nconst toCamelCase = (parts) => {\n    return parts.map((string, index) => {\n        return index === 0 ? string.toLowerCase() : string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n    }).join(\"\");\n};\nexport { kebabToCamelCase, camelToKebabCase };\n//# sourceMappingURL=StringHelper.js.map","/**\n * Determines the slot to which a node should be assigned\n * @param node Text node or HTML element\n * @returns {string}\n */\nconst getSlotName = (node) => {\n    // Text nodes can only go to the default slot\n    if (!(node instanceof HTMLElement)) {\n        return \"default\";\n    }\n    // Discover the slot based on the real slot name (f.e. footer => footer, or content-32 => content)\n    const slot = node.getAttribute(\"slot\");\n    if (slot) {\n        const match = slot.match(/^(.+?)-\\d+$/);\n        return match ? match[1] : slot;\n    }\n    // Use default slot as a fallback\n    return \"default\";\n};\nconst getSlottedNodes = (node) => {\n    if (node instanceof HTMLSlotElement) {\n        return node.assignedNodes({ flatten: true }).filter(item => item instanceof HTMLElement);\n    }\n    return [node];\n};\nconst getSlottedNodesList = (nodeList) => {\n    return nodeList.reduce((acc, curr) => acc.concat(getSlottedNodes(curr)), []);\n};\nexport { getSlotName, getSlottedNodes, getSlottedNodesList, };\n//# sourceMappingURL=SlotsHelper.js.map","import { camelToKebabCase } from \"./util/StringHelper.js\";\nimport { getSlottedNodes } from \"./util/SlotsHelper.js\";\nimport { getEffectiveScopingSuffixForTag } from \"./CustomElementsScopeUtils.js\";\n/**\n *\n * @class\n * @public\n */\nclass UI5ElementMetadata {\n    constructor(metadata) {\n        this.metadata = metadata;\n    }\n    getInitialState() {\n        if (Object.prototype.hasOwnProperty.call(this, \"_initialState\")) {\n            return this._initialState;\n        }\n        const initialState = {};\n        const slotsAreManaged = this.slotsAreManaged();\n        // Initialize properties\n        const props = this.getProperties();\n        for (const propName in props) { // eslint-disable-line\n            const propType = props[propName].type;\n            const propDefaultValue = props[propName].defaultValue;\n            if (propType === Boolean) {\n                initialState[propName] = false;\n                if (propDefaultValue !== undefined) {\n                    console.warn(\"The 'defaultValue' metadata key is ignored for all booleans properties, they would be initialized with 'false' by default\"); // eslint-disable-line\n                }\n            }\n            else if (props[propName].multiple) {\n                initialState[propName] = [];\n            }\n            else if (propType === Object) {\n                initialState[propName] = \"defaultValue\" in props[propName] ? props[propName].defaultValue : {};\n            }\n            else if (propType === String) {\n                initialState[propName] = \"defaultValue\" in props[propName] ? props[propName].defaultValue : \"\";\n            }\n            else {\n                initialState[propName] = propDefaultValue;\n            }\n        }\n        // Initialize slots\n        if (slotsAreManaged) {\n            const slots = this.getSlots();\n            for (const [slotName, slotData] of Object.entries(slots)) { // eslint-disable-line\n                const propertyName = slotData.propertyName || slotName;\n                initialState[propertyName] = [];\n            }\n        }\n        this._initialState = initialState;\n        return initialState;\n    }\n    /**\n     * Validates the property's value and returns it if correct\n     * or returns the default value if not.\n     * <b>Note:</b> Only intended for use by UI5Element.js\n     * @public\n     */\n    static validatePropertyValue(value, propData) {\n        const isMultiple = propData.multiple;\n        if (isMultiple && value) {\n            return value.map((propValue) => validateSingleProperty(propValue, propData));\n        }\n        return validateSingleProperty(value, propData);\n    }\n    /**\n     * Validates the slot's value and returns it if correct\n     * or throws an exception if not.\n     * <b>Note:</b> Only intended for use by UI5Element.js\n     * @pubic\n     */\n    static validateSlotValue(value, slotData) {\n        return validateSingleSlot(value, slotData);\n    }\n    /**\n     * Returns the tag of the UI5 Element without the scope\n     * @public\n     */\n    getPureTag() {\n        return this.metadata.tag || \"\";\n    }\n    /**\n     * Returns the tag of the UI5 Element\n     * @public\n     */\n    getTag() {\n        const pureTag = this.metadata.tag;\n        if (!pureTag) {\n            return \"\";\n        }\n        const suffix = getEffectiveScopingSuffixForTag(pureTag);\n        if (!suffix) {\n            return pureTag;\n        }\n        return `${pureTag}-${suffix}`;\n    }\n    /**\n     * Determines whether a property should have an attribute counterpart\n     * @public\n     * @param propName\n     * @returns {boolean}\n     */\n    hasAttribute(propName) {\n        const propData = this.getProperties()[propName];\n        return propData.type !== Object && !propData.noAttribute && !propData.multiple;\n    }\n    /**\n     * Returns an array with the properties of the UI5 Element (in camelCase)\n     * @public\n     * @returns {string[]}\n     */\n    getPropertiesList() {\n        return Object.keys(this.getProperties());\n    }\n    /**\n     * Returns an array with the attributes of the UI5 Element (in kebab-case)\n     * @public\n     * @returns {string[]}\n     */\n    getAttributesList() {\n        return this.getPropertiesList().filter(this.hasAttribute.bind(this)).map(camelToKebabCase);\n    }\n    /**\n     * Determines whether this UI5 Element has a default slot of type Node, therefore can slot text\n     * @returns {boolean}\n     */\n    canSlotText() {\n        const defaultSlot = this.getSlots().default;\n        return defaultSlot && defaultSlot.type === Node;\n    }\n    /**\n     * Determines whether this UI5 Element supports any slots\n     * @public\n     */\n    hasSlots() {\n        return !!Object.entries(this.getSlots()).length;\n    }\n    /**\n     * Determines whether this UI5 Element supports any slots with \"individualSlots: true\"\n     * @public\n     */\n    hasIndividualSlots() {\n        return this.slotsAreManaged() && Object.values(this.getSlots()).some(slotData => slotData.individualSlots);\n    }\n    /**\n     * Determines whether this UI5 Element needs to invalidate if children are added/removed/changed\n     * @public\n     */\n    slotsAreManaged() {\n        return !!this.metadata.managedSlots;\n    }\n    /**\n     * Determines whether this control supports F6 fast navigation\n     * @public\n     */\n    supportsF6FastNavigation() {\n        return !!this.metadata.fastNavigation;\n    }\n    /**\n     * Returns an object with key-value pairs of properties and their metadata definitions\n     * @public\n     */\n    getProperties() {\n        if (!this.metadata.properties) {\n            this.metadata.properties = {};\n        }\n        return this.metadata.properties;\n    }\n    /**\n     * Returns an object with key-value pairs of events and their metadata definitions\n     * @public\n     */\n    getEvents() {\n        if (!this.metadata.events) {\n            this.metadata.events = {};\n        }\n        return this.metadata.events;\n    }\n    /**\n     * Returns an object with key-value pairs of slots and their metadata definitions\n     * @public\n     */\n    getSlots() {\n        if (!this.metadata.slots) {\n            this.metadata.slots = {};\n        }\n        return this.metadata.slots;\n    }\n    /**\n     * Determines whether this UI5 Element has any translatable texts (needs to be invalidated upon language change)\n     * @returns {boolean}\n     */\n    isLanguageAware() {\n        return !!this.metadata.languageAware;\n    }\n    /**\n     * Determines whether this UI5 Element has any theme dependant carachteristics.\n     * @returns {boolean}\n     */\n    isThemeAware() {\n        return !!this.metadata.themeAware;\n    }\n    /**\n     * Matches a changed entity (property/slot) with the given name against the \"invalidateOnChildChange\" configuration\n     * and determines whether this should cause and invalidation\n     *\n     * @param slotName the name of the slot in which a child was changed\n     * @param type the type of change in the child: \"property\" or \"slot\"\n     * @param name the name of the property/slot that changed\n     * @returns {boolean}\n     */\n    shouldInvalidateOnChildChange(slotName, type, name) {\n        const config = this.getSlots()[slotName].invalidateOnChildChange;\n        // invalidateOnChildChange was not set in the slot metadata - by default child changes do not affect the component\n        if (config === undefined) {\n            return false;\n        }\n        // The simple format was used: invalidateOnChildChange: true/false;\n        if (typeof config === \"boolean\") {\n            return config;\n        }\n        // The complex format was used: invalidateOnChildChange: { properties, slots }\n        if (typeof config === \"object\") {\n            // A property was changed\n            if (type === \"property\") {\n                // The config object does not have a properties field\n                if (config.properties === undefined) {\n                    return false;\n                }\n                // The config object has the short format: properties: true/false\n                if (typeof config.properties === \"boolean\") {\n                    return config.properties;\n                }\n                // The config object has the complex format: properties: [...]\n                if (Array.isArray(config.properties)) {\n                    return config.properties.includes(name);\n                }\n                throw new Error(\"Wrong format for invalidateOnChildChange.properties: boolean or array is expected\");\n            }\n            // A slot was changed\n            if (type === \"slot\") {\n                // The config object does not have a slots field\n                if (config.slots === undefined) {\n                    return false;\n                }\n                // The config object has the short format: slots: true/false\n                if (typeof config.slots === \"boolean\") {\n                    return config.slots;\n                }\n                // The config object has the complex format: slots: [...]\n                if (Array.isArray(config.slots)) {\n                    return config.slots.includes(name);\n                }\n                throw new Error(\"Wrong format for invalidateOnChildChange.slots: boolean or array is expected\");\n            }\n        }\n        throw new Error(\"Wrong format for invalidateOnChildChange: boolean or object is expected\");\n    }\n}\nconst validateSingleProperty = (value, propData) => {\n    const propertyType = propData.type;\n    let propertyValidator = propData.validator;\n    if (propertyType && propertyType.isDataTypeClass) {\n        propertyValidator = propertyType;\n    }\n    if (propertyValidator) {\n        return propertyValidator.isValid(value) ? value : propData.defaultValue;\n    }\n    if (!propertyType || propertyType === String) {\n        return (typeof value === \"string\" || typeof value === \"undefined\" || value === null) ? value : value.toString();\n    }\n    if (propertyType === Boolean) {\n        return typeof value === \"boolean\" ? value : false;\n    }\n    if (propertyType === Object) {\n        return typeof value === \"object\" ? value : propData.defaultValue;\n    }\n    // Check if \"value\" is part of the enum (propertyType) values and return the defaultValue if not found.\n    return value in propertyType ? value : propData.defaultValue;\n};\nconst validateSingleSlot = (value, slotData) => {\n    value && getSlottedNodes(value).forEach(el => {\n        if (!(el instanceof slotData.type)) {\n            throw new Error(`The element is not of type ${slotData.type.toString()}`);\n        }\n    });\n    return value;\n};\nexport default UI5ElementMetadata;\n//# sourceMappingURL=UI5ElementMetadata.js.map","class StaticArea extends HTMLElement {\n}\nif (!customElements.get(\"ui5-static-area\")) {\n    customElements.define(\"ui5-static-area\", StaticArea);\n}\nexport default StaticArea;\n//# sourceMappingURL=StaticArea.js.map","import { reRenderAllUI5Elements } from \"../Render.js\";\nimport getSharedResource from \"../getSharedResource.js\";\nimport EventProvider from \"../EventProvider.js\";\nconst getEventProvider = () => getSharedResource(\"CustomStyle.eventProvider\", new EventProvider());\nconst CUSTOM_CSS_CHANGE = \"CustomCSSChange\";\nconst attachCustomCSSChange = (listener) => {\n    getEventProvider().attachEvent(CUSTOM_CSS_CHANGE, listener);\n};\nconst detachCustomCSSChange = (listener) => {\n    getEventProvider().detachEvent(CUSTOM_CSS_CHANGE, listener);\n};\nconst fireCustomCSSChange = (tag) => {\n    return getEventProvider().fireEvent(CUSTOM_CSS_CHANGE, tag);\n};\nconst getCustomCSSFor = () => getSharedResource(\"CustomStyle.customCSSFor\", {});\n// Listen to the eventProvider, in case other copies of this CustomStyle module fire this\n// event, and this copy would therefore need to reRender the ui5 webcomponents; but\n// don't reRender if it was this copy that fired the event to begin with.\nlet skipRerender;\nattachCustomCSSChange((tag) => {\n    if (!skipRerender) {\n        reRenderAllUI5Elements({ tag });\n    }\n});\nconst addCustomCSS = (tag, css) => {\n    const customCSSFor = getCustomCSSFor();\n    if (!customCSSFor[tag]) {\n        customCSSFor[tag] = [];\n    }\n    customCSSFor[tag].push(css);\n    skipRerender = true;\n    try {\n        // The event is fired and the attached event listeners are all called synchronously\n        // The skipRerender flag will be used to avoid calling reRenderAllUI5Elements twice when it is this copy\n        // of CustomStyle.js which is firing the `CustomCSSChange` event.\n        fireCustomCSSChange(tag);\n    }\n    finally {\n        skipRerender = false;\n    }\n    return reRenderAllUI5Elements({ tag });\n};\nconst getCustomCSS = (tag) => {\n    const customCSSFor = getCustomCSSFor();\n    return customCSSFor[tag] ? customCSSFor[tag].join(\"\") : \"\";\n};\nexport { addCustomCSS, getCustomCSS, attachCustomCSSChange, detachCustomCSSChange, };\n//# sourceMappingURL=CustomStyle.js.map","const MAX_DEPTH_INHERITED_CLASSES = 10; // TypeScript complains about Infinity and big numbers\nconst getStylesString = (styles) => {\n    if (Array.isArray(styles)) {\n        return styles.filter(style => !!style).flat(MAX_DEPTH_INHERITED_CLASSES).map((style) => {\n            return typeof style === \"string\" ? style : style.content;\n        }).join(\" \");\n    }\n    return typeof styles === \"string\" ? styles : styles.content;\n};\nexport default getStylesString;\n//# sourceMappingURL=getStylesString.js.map","import { getCustomCSS, attachCustomCSSChange } from \"./CustomStyle.js\";\nimport getStylesString from \"./getStylesString.js\";\nimport { getFeature } from \"../FeaturesRegistry.js\";\nconst effectiveStyleMap = new Map();\nattachCustomCSSChange((tag) => {\n    effectiveStyleMap.delete(`${tag}_normal`); // there is custom CSS only for the component itself, not for its static area part\n});\nconst getEffectiveStyle = (ElementClass, forStaticArea = false) => {\n    const tag = ElementClass.getMetadata().getTag();\n    const key = `${tag}_${forStaticArea ? \"static\" : \"normal\"}`;\n    const openUI5Enablement = getFeature(\"OpenUI5Enablement\");\n    if (!effectiveStyleMap.has(key)) {\n        let effectiveStyle;\n        let busyIndicatorStyles = \"\";\n        if (openUI5Enablement) {\n            busyIndicatorStyles = getStylesString(openUI5Enablement.getBusyIndicatorStyles());\n        }\n        if (forStaticArea) {\n            effectiveStyle = getStylesString(ElementClass.staticAreaStyles);\n        }\n        else {\n            const customStyle = getCustomCSS(tag) || \"\";\n            const builtInStyles = getStylesString(ElementClass.styles);\n            effectiveStyle = `${builtInStyles} ${customStyle}`;\n        }\n        effectiveStyle = `${effectiveStyle} ${busyIndicatorStyles}`;\n        effectiveStyleMap.set(key, effectiveStyle);\n    }\n    return effectiveStyleMap.get(key); // The key is guaranteed to exist\n};\nexport default getEffectiveStyle;\n//# sourceMappingURL=getEffectiveStyle.js.map","import getEffectiveStyle from \"./getEffectiveStyle.js\";\nimport { attachCustomCSSChange } from \"./CustomStyle.js\";\nconst constructableStyleMap = new Map();\nattachCustomCSSChange((tag) => {\n    constructableStyleMap.delete(`${tag}_normal`); // there is custom CSS only for the component itself, not for its static area part\n});\n/**\n * Returns (and caches) a constructable style sheet for a web component class\n * Note: Chrome\n * @param ElementClass\n * @returns {*}\n */\nconst getConstructableStyle = (ElementClass, forStaticArea = false) => {\n    const tag = ElementClass.getMetadata().getTag();\n    const key = `${tag}_${forStaticArea ? \"static\" : \"normal\"}`;\n    if (!constructableStyleMap.has(key)) {\n        const styleContent = getEffectiveStyle(ElementClass, forStaticArea);\n        const style = new CSSStyleSheet();\n        style.replaceSync(styleContent);\n        constructableStyleMap.set(key, [style]);\n    }\n    return constructableStyleMap.get(key);\n};\nexport default getConstructableStyle;\n//# sourceMappingURL=getConstructableStyle.js.map","import getConstructableStyle from \"./theming/getConstructableStyle.js\";\nimport getEffectiveStyle from \"./theming/getEffectiveStyle.js\";\nimport getEffectiveLinksHrefs from \"./theming/getEffectiveLinksHrefs.js\";\nimport { shouldUseLinks } from \"./CSP.js\";\n/**\n * Updates the shadow root of a UI5Element or its static area item\n * @param element\n * @param forStaticArea\n */\nconst updateShadowRoot = (element, forStaticArea = false) => {\n    let styleStrOrHrefsArr;\n    const ctor = element.constructor;\n    const shadowRoot = forStaticArea ? element.staticAreaItem.shadowRoot : element.shadowRoot;\n    let renderResult;\n    if (forStaticArea) {\n        renderResult = element.renderStatic(); // this is checked before calling updateShadowRoot\n    }\n    else {\n        renderResult = element.render(); // this is checked before calling updateShadowRoot\n    }\n    if (!shadowRoot) {\n        console.warn(`There is no shadow root to update`); // eslint-disable-line\n        return;\n    }\n    if (shouldUseLinks()) {\n        styleStrOrHrefsArr = getEffectiveLinksHrefs(ctor, forStaticArea);\n    }\n    else if (document.adoptedStyleSheets) { // Chrome\n        shadowRoot.adoptedStyleSheets = getConstructableStyle(ctor, forStaticArea);\n    }\n    else { // FF, Safari\n        styleStrOrHrefsArr = getEffectiveStyle(ctor, forStaticArea);\n    }\n    if (ctor.renderer) {\n        ctor.renderer(renderResult, shadowRoot, styleStrOrHrefsArr, forStaticArea, { host: element });\n        return;\n    }\n    ctor.render(renderResult, shadowRoot, styleStrOrHrefsArr, forStaticArea, { host: element });\n};\nexport default updateShadowRoot;\n//# sourceMappingURL=updateShadowRoot.js.map","const GLOBAL_CONTENT_DENSITY_CSS_VAR = \"--_ui5_content_density\";\nconst getEffectiveContentDensity = (el) => getComputedStyle(el).getPropertyValue(GLOBAL_CONTENT_DENSITY_CSS_VAR);\nexport default getEffectiveContentDensity;\n//# sourceMappingURL=getEffectiveContentDensity.js.map","export default (value) => {\n    const m = /\\$([-a-z0-9A-Z._]+)(?::([^$]*))?\\$/.exec(value);\n    return m && m[2] ? m[2].split(/,/) : null;\n};\n//# sourceMappingURL=getDesigntimePropertyAsArray.js.map","import { getRTL as getConfiguredRTL } from \"../InitialConfiguration.js\";\nimport { getLanguage } from \"./Language.js\";\nimport getDesigntimePropertyAsArray from \"../util/getDesigntimePropertyAsArray.js\";\nimport detectNavigatorLanguage from \"../util/detectNavigatorLanguage.js\";\nconst M_ISO639_OLD_TO_NEW = {\n    \"iw\": \"he\",\n    \"ji\": \"yi\",\n    \"in\": \"id\",\n    \"sh\": \"sr\",\n};\nconst A_RTL_LOCALES = getDesigntimePropertyAsArray(\"$cldr-rtl-locales:ar,fa,he$\") || [];\n/**\n * Checks whether the language is using RTL\n * @param {string} language\n * @returns {boolean} whether the language is using RTL\n */\nconst impliesRTL = (language) => {\n    language = (language && M_ISO639_OLD_TO_NEW[language]) || language;\n    return A_RTL_LOCALES.indexOf(language) >= 0;\n};\n/**\n * Gets the effective RTL setting by first checking the configuration\n * and if not set using the currently set language or the navigator language if the language is not explicitly set.\n * @returns {boolean} whether RTL should be used\n */\nconst getRTL = () => {\n    if (typeof document === \"undefined\") {\n        return false;\n    }\n    const configurationRTL = getConfiguredRTL();\n    if (configurationRTL !== undefined) {\n        return !!configurationRTL;\n    }\n    return impliesRTL(getLanguage() || detectNavigatorLanguage());\n};\nexport { getRTL }; // eslint-disable-line\n//# sourceMappingURL=RTL.js.map","import { getRTL } from \"../config/RTL.js\";\nconst GLOBAL_DIR_CSS_VAR = \"--_ui5_dir\";\nconst getEffectiveDir = (element) => {\n    const doc = window.document;\n    const dirValues = [\"ltr\", \"rtl\"]; // exclude \"auto\" and \"\" from all calculations\n    const locallyAppliedDir = getComputedStyle(element).getPropertyValue(GLOBAL_DIR_CSS_VAR);\n    // In that order, inspect the CSS Var (for modern browsers), the element itself, html and body (for IE fallback)\n    if (dirValues.includes(locallyAppliedDir)) {\n        return locallyAppliedDir;\n    }\n    if (dirValues.includes(element.dir)) {\n        return element.dir;\n    }\n    if (dirValues.includes(doc.documentElement.dir)) {\n        return doc.documentElement.dir;\n    }\n    if (dirValues.includes(doc.body.dir)) {\n        return doc.body.dir;\n    }\n    // Finally, check the configuration for explicitly set RTL or language-implied RTL\n    return getRTL() ? \"rtl\" : undefined;\n};\nexport default getEffectiveDir;\n//# sourceMappingURL=getEffectiveDir.js.map","import \"./StaticArea.js\";\nimport updateShadowRoot from \"./updateShadowRoot.js\";\nimport { renderFinished } from \"./Render.js\";\nimport getEffectiveContentDensity from \"./util/getEffectiveContentDensity.js\";\nimport { getEffectiveScopingSuffixForTag } from \"./CustomElementsScopeUtils.js\";\nimport getEffectiveDir from \"./locale/getEffectiveDir.js\";\nconst pureTagName = \"ui5-static-area-item\";\nconst popupIntegrationAttr = \"data-sap-ui-integration-popup-content\";\n/**\n *\n * @class\n * @author SAP SE\n * @private\n */\nclass StaticAreaItem extends HTMLElement {\n    constructor() {\n        super();\n        this._rendered = false;\n        this.attachShadow({ mode: \"open\" });\n    }\n    /**\n     * @param {UI5Element} ownerElement the UI5Element instance that owns this static area item\n     */\n    setOwnerElement(ownerElement) {\n        this.ownerElement = ownerElement;\n        this.classList.add(this.ownerElement._id); // used for getting the popover in the tests\n        if (this.ownerElement.hasAttribute(\"data-ui5-static-stable\")) {\n            this.setAttribute(\"data-ui5-stable\", this.ownerElement.getAttribute(\"data-ui5-static-stable\")); // stable selector\n        }\n    }\n    /**\n     * Updates the shadow root of the static area item with the latest state, if rendered\n     */\n    update() {\n        if (this._rendered) {\n            this._updateAdditionalAttrs();\n            this._updateContentDensity();\n            this._updateDirection();\n            updateShadowRoot(this.ownerElement, true);\n        }\n    }\n    /**\n     * Sets the correct content density based on the owner element's state\n     * @private\n     */\n    _updateContentDensity() {\n        if (getEffectiveContentDensity(this.ownerElement) === \"compact\") {\n            this.classList.add(\"sapUiSizeCompact\");\n            this.classList.add(\"ui5-content-density-compact\");\n        }\n        else {\n            this.classList.remove(\"sapUiSizeCompact\");\n            this.classList.remove(\"ui5-content-density-compact\");\n        }\n    }\n    _updateDirection() {\n        if (this.ownerElement) {\n            const dir = getEffectiveDir(this.ownerElement);\n            if (dir) {\n                this.setAttribute(\"dir\", dir);\n            }\n            else {\n                this.removeAttribute(\"dir\");\n            }\n        }\n    }\n    _updateAdditionalAttrs() {\n        this.setAttribute(pureTagName, \"\");\n        this.setAttribute(popupIntegrationAttr, \"\");\n    }\n    /**\n     * @protected\n     * Returns reference to the DOM element where the current fragment is added.\n     */\n    async getDomRef() {\n        this._updateContentDensity();\n        if (!this._rendered) {\n            this._rendered = true;\n            updateShadowRoot(this.ownerElement, true);\n        }\n        await renderFinished(); // Wait for the content of the ui5-static-area-item to be rendered\n        return this.shadowRoot;\n    }\n    static getTag() {\n        const suffix = getEffectiveScopingSuffixForTag(pureTagName);\n        if (!suffix) {\n            return pureTagName;\n        }\n        return `${pureTagName}-${suffix}`;\n    }\n    static createInstance() {\n        if (!customElements.get(StaticAreaItem.getTag())) {\n            customElements.define(StaticAreaItem.getTag(), StaticAreaItem);\n        }\n        return document.createElement(this.getTag());\n    }\n}\nexport default StaticAreaItem;\n//# sourceMappingURL=StaticAreaItem.js.map","const observers = new WeakMap();\n/**\n * @param node\n * @param callback\n * @param options\n */\nconst observeDOMNode = (node, callback, options) => {\n    const observer = new MutationObserver(callback);\n    observers.set(node, observer);\n    observer.observe(node, options);\n};\n/**\n * @param node\n */\nconst unobserveDOMNode = (node) => {\n    const observer = observers.get(node);\n    if (observer) {\n        observer.disconnect();\n        observers.delete(node);\n    }\n};\nexport { observeDOMNode, unobserveDOMNode, };\n//# sourceMappingURL=DOMObserver.js.map","import { getNoConflict as getConfiguredNoConflict } from \"../InitialConfiguration.js\";\n// Fire these events even with noConflict: true\nconst excludeList = [\n    \"value-changed\",\n    \"click\",\n];\nlet noConflict;\nconst shouldFireOriginalEvent = (eventName) => {\n    return excludeList.includes(eventName);\n};\nconst shouldNotFireOriginalEvent = (eventName) => {\n    const nc = getNoConflict();\n    // return !(nc.events && nc.events.includes && nc.events.includes(eventName));\n    return !(typeof nc !== \"boolean\" && nc.events && nc.events.includes && nc.events.includes(eventName));\n};\n/**\n * Returns if the \"noConflict\" configuration is set.\n * @public\n * @returns { NoConflictData }\n */\nconst getNoConflict = () => {\n    if (noConflict === undefined) {\n        noConflict = getConfiguredNoConflict();\n    }\n    return noConflict;\n};\n/**\n * Sets the \"noConflict\" mode.\n * - When \"false\" (default value), all custom events are fired with and without the \"ui5-\" prefix.\n * - When \"true\", all custom events are fired with the \"ui5-\" prefix only.\n * - When an object is supplied, just the specified events will be fired with the \"ui5-\" prefix.\n * @public\n * @param { NoConflictData } noConflictData\n */\nconst setNoConflict = (noConflictData) => {\n    noConflict = noConflictData;\n};\nconst skipOriginalEvent = (eventName) => {\n    const nc = getNoConflict();\n    // Always fire these events\n    if (shouldFireOriginalEvent(eventName)) {\n        return false;\n    }\n    // Read from the configuration\n    if (nc === true) {\n        return true;\n    }\n    return !shouldNotFireOriginalEvent(eventName);\n};\nexport { getNoConflict, setNoConflict, skipOriginalEvent, };\n//# sourceMappingURL=NoConflict.js.map","// Note: disabled is present in IE so we explicitly allow it here.\n// Others, such as title/hidden, we explicitly override, so valid too\nconst allowList = [\n    \"disabled\",\n    \"title\",\n    \"hidden\",\n    \"role\",\n    \"draggable\",\n];\n/**\n * Checks whether a property name is valid (does not collide with existing DOM API properties)\n *\n * @param name\n * @returns {boolean}\n */\nconst isValidPropertyName = (name) => {\n    if (allowList.includes(name) || name.startsWith(\"aria\")) {\n        return true;\n    }\n    const classes = [\n        HTMLElement,\n        Element,\n        Node,\n    ];\n    return !classes.some(klass => klass.prototype.hasOwnProperty(name)); // eslint-disable-line\n};\nexport default isValidPropertyName;\n//# sourceMappingURL=isValidPropertyName.js.map","const arraysAreEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n};\nexport default arraysAreEqual;\n//# sourceMappingURL=arraysAreEqual.js.map","import { getCustomElementsScopingSuffix, shouldScopeCustomElement } from \"../CustomElementsScopeUtils.js\";\n/**\n * Runs a component's template with the component's current state, while also scoping HTML\n *\n * @param template - the template to execute\n * @param component - the component\n * @public\n */\nconst executeTemplate = (template, component) => {\n    const tagsToScope = getTagsToScope(component);\n    const scope = getCustomElementsScopingSuffix();\n    return template.call(component, component, tagsToScope, scope);\n};\n/**\n * Returns all tags, used inside component's template subject to scoping.\n * @param component - the component\n * @returns {Array[]}\n * @private\n */\nconst getTagsToScope = (component) => {\n    const ctor = component.constructor;\n    const componentTag = ctor.getMetadata().getPureTag();\n    const tagsToScope = ctor.getUniqueDependencies().map((dep) => dep.getMetadata().getPureTag()).filter(shouldScopeCustomElement);\n    if (shouldScopeCustomElement(componentTag)) {\n        tagsToScope.push(componentTag);\n    }\n    return tagsToScope;\n};\nexport default executeTemplate;\n//# sourceMappingURL=executeTemplate.js.map","import merge from \"./thirdparty/merge.js\";\nimport { boot } from \"./Boot.js\";\nimport UI5ElementMetadata from \"./UI5ElementMetadata.js\";\nimport EventProvider from \"./EventProvider.js\";\nimport getSingletonElementInstance from \"./util/getSingletonElementInstance.js\";\nimport StaticAreaItem from \"./StaticAreaItem.js\";\nimport updateShadowRoot from \"./updateShadowRoot.js\";\nimport { renderDeferred, renderImmediately, cancelRender } from \"./Render.js\";\nimport { registerTag, isTagRegistered, recordTagRegistrationFailure } from \"./CustomElementsRegistry.js\";\nimport { observeDOMNode, unobserveDOMNode } from \"./DOMObserver.js\";\nimport { skipOriginalEvent } from \"./config/NoConflict.js\";\nimport getEffectiveDir from \"./locale/getEffectiveDir.js\";\nimport { kebabToCamelCase, camelToKebabCase } from \"./util/StringHelper.js\";\nimport isValidPropertyName from \"./util/isValidPropertyName.js\";\nimport { getSlotName, getSlottedNodesList } from \"./util/SlotsHelper.js\";\nimport arraysAreEqual from \"./util/arraysAreEqual.js\";\nimport { markAsRtlAware } from \"./locale/RTLAwareRegistry.js\";\nimport preloadLinks from \"./theming/preloadLinks.js\";\nimport executeTemplate from \"./renderer/executeTemplate.js\";\nlet autoId = 0;\nconst elementTimeouts = new Map();\nconst uniqueDependenciesCache = new Map();\n/**\n * Triggers re-rendering of a UI5Element instance due to state change.\n * @param {ChangeInfo} changeInfo An object with information about the change that caused invalidation.\n * @private\n */\nfunction _invalidate(changeInfo) {\n    // Invalidation should be suppressed: 1) before the component is rendered for the first time 2) and during the execution of onBeforeRendering\n    // This is necessary not only as an optimization, but also to avoid infinite loops on invalidation between children and parents (when invalidateOnChildChange is used)\n    if (this._suppressInvalidation) {\n        return;\n    }\n    // Call the onInvalidation hook\n    this.onInvalidation(changeInfo);\n    this._changedState.push(changeInfo);\n    renderDeferred(this);\n    this._eventProvider.fireEvent(\"invalidate\", { ...changeInfo, target: this });\n}\n/**\n * Base class for all UI5 Web Components\n *\n * @class\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webc.base.UI5Element\n * @extends HTMLElement\n * @public\n */\nclass UI5Element extends HTMLElement {\n    constructor() {\n        super();\n        const ctor = this.constructor;\n        this._changedState = []; // Filled on each invalidation, cleared on re-render (used for debugging)\n        this._suppressInvalidation = true; // A flag telling whether all invalidations should be ignored. Initialized with \"true\" because a UI5Element can not be invalidated until it is rendered for the first time\n        this._inDOM = false; // A flag telling whether the UI5Element is currently in the DOM tree of the document or not\n        this._fullyConnected = false; // A flag telling whether the UI5Element's onEnterDOM hook was called (since it's possible to have the element removed from DOM before that)\n        this._childChangeListeners = new Map(); // used to store lazy listeners per slot for the child change event of every child inside that slot\n        this._slotChangeListeners = new Map(); // used to store lazy listeners per slot for the slotchange event of all slot children inside that slot\n        this._eventProvider = new EventProvider(); // used by parent components for listening to changes to child components\n        let deferredResolve;\n        this._domRefReadyPromise = new Promise(resolve => {\n            deferredResolve = resolve;\n        });\n        this._domRefReadyPromise._deferredResolve = deferredResolve;\n        this._doNotSyncAttributes = new Set(); // attributes that are excluded from attributeChangedCallback synchronization\n        this._state = { ...ctor.getMetadata().getInitialState() };\n        this._upgradeAllProperties();\n        if (ctor._needsShadowDOM()) {\n            this.attachShadow({ mode: \"open\" });\n        }\n    }\n    /**\n     * Returns a unique ID for this UI5 Element\n     *\n     * @deprecated - This property is not guaranteed in future releases\n     * @protected\n     */\n    get _id() {\n        if (!this.__id) {\n            this.__id = `ui5wc_${++autoId}`;\n        }\n        return this.__id;\n    }\n    render() {\n        const template = this.constructor.template;\n        return executeTemplate(template, this);\n    }\n    renderStatic() {\n        const template = this.constructor.staticAreaTemplate;\n        return executeTemplate(template, this);\n    }\n    /**\n     * Do not call this method from derivatives of UI5Element, use \"onEnterDOM\" only\n     * @private\n     */\n    async connectedCallback() {\n        const ctor = this.constructor;\n        this.setAttribute(ctor.getMetadata().getPureTag(), \"\");\n        if (ctor.getMetadata().supportsF6FastNavigation()) {\n            this.setAttribute(\"data-sap-ui-fastnavgroup\", \"true\");\n        }\n        const slotsAreManaged = ctor.getMetadata().slotsAreManaged();\n        this._inDOM = true;\n        if (slotsAreManaged) {\n            // always register the observer before yielding control to the main thread (await)\n            this._startObservingDOMChildren();\n            await this._processChildren();\n        }\n        if (!this._inDOM) { // Component removed from DOM while _processChildren was running\n            return;\n        }\n        renderImmediately(this);\n        this._domRefReadyPromise._deferredResolve();\n        this._fullyConnected = true;\n        this.onEnterDOM();\n    }\n    /**\n     * Do not call this method from derivatives of UI5Element, use \"onExitDOM\" only\n     * @private\n     */\n    disconnectedCallback() {\n        const ctor = this.constructor;\n        const slotsAreManaged = ctor.getMetadata().slotsAreManaged();\n        this._inDOM = false;\n        if (slotsAreManaged) {\n            this._stopObservingDOMChildren();\n        }\n        if (this._fullyConnected) {\n            this.onExitDOM();\n            this._fullyConnected = false;\n        }\n        if (this.staticAreaItem && this.staticAreaItem.parentElement) {\n            this.staticAreaItem.parentElement.removeChild(this.staticAreaItem);\n        }\n        cancelRender(this);\n    }\n    /**\n     * Called every time before the component renders.\n     * @public\n     */\n    onBeforeRendering() { }\n    /**\n     * Called every time after the component renders.\n     * @public\n     */\n    onAfterRendering() { }\n    /**\n     * Called on connectedCallback - added to the DOM.\n     * @public\n     */\n    onEnterDOM() { }\n    /**\n     * Called on disconnectedCallback - removed from the DOM.\n     * @public\n     */\n    onExitDOM() { }\n    /**\n     * @private\n     */\n    _startObservingDOMChildren() {\n        const ctor = this.constructor;\n        const shouldObserveChildren = ctor.getMetadata().hasSlots();\n        if (!shouldObserveChildren) {\n            return;\n        }\n        const canSlotText = ctor.getMetadata().canSlotText();\n        const mutationObserverOptions = {\n            childList: true,\n            subtree: canSlotText,\n            characterData: canSlotText,\n        };\n        observeDOMNode(this, this._processChildren.bind(this), mutationObserverOptions);\n    }\n    /**\n     * @private\n     */\n    _stopObservingDOMChildren() {\n        unobserveDOMNode(this);\n    }\n    /**\n     * Note: this method is also manually called by \"compatibility/patchNodeValue.js\"\n     * @private\n     */\n    async _processChildren() {\n        const hasSlots = this.constructor.getMetadata().hasSlots();\n        if (hasSlots) {\n            await this._updateSlots();\n        }\n    }\n    /**\n     * @private\n     */\n    async _updateSlots() {\n        const ctor = this.constructor;\n        const slotsMap = ctor.getMetadata().getSlots();\n        const canSlotText = ctor.getMetadata().canSlotText();\n        const domChildren = Array.from(canSlotText ? this.childNodes : this.children);\n        const slotsCachedContentMap = new Map(); // Store here the content of each slot before the mutation occurred\n        const propertyNameToSlotMap = new Map(); // Used for reverse lookup to determine to which slot the property name corresponds\n        // Init the _state object based on the supported slots and store the previous values\n        for (const [slotName, slotData] of Object.entries(slotsMap)) { // eslint-disable-line\n            const propertyName = slotData.propertyName || slotName;\n            propertyNameToSlotMap.set(propertyName, slotName);\n            slotsCachedContentMap.set(propertyName, [...this._state[propertyName]]);\n            this._clearSlot(slotName, slotData);\n        }\n        const autoIncrementMap = new Map();\n        const slottedChildrenMap = new Map();\n        const allChildrenUpgraded = domChildren.map(async (child, idx) => {\n            // Determine the type of the child (mainly by the slot attribute)\n            const slotName = getSlotName(child);\n            const slotData = slotsMap[slotName];\n            // Check if the slotName is supported\n            if (slotData === undefined) {\n                if (slotName !== \"default\") {\n                    const validValues = Object.keys(slotsMap).join(\", \");\n                    console.warn(`Unknown slotName: ${slotName}, ignoring`, child, `Valid values are: ${validValues}`); // eslint-disable-line\n                }\n                return;\n            }\n            // For children that need individual slots, calculate them\n            if (slotData.individualSlots) {\n                const nextIndex = (autoIncrementMap.get(slotName) || 0) + 1;\n                autoIncrementMap.set(slotName, nextIndex);\n                child._individualSlot = `${slotName}-${nextIndex}`;\n            }\n            // Await for not-yet-defined custom elements\n            if (child instanceof HTMLElement) {\n                const localName = child.localName;\n                const isCustomElement = localName.includes(\"-\");\n                if (isCustomElement) {\n                    const isDefined = window.customElements.get(localName);\n                    if (!isDefined) {\n                        const whenDefinedPromise = window.customElements.whenDefined(localName); // Class registered, but instances not upgraded yet\n                        let timeoutPromise = elementTimeouts.get(localName);\n                        if (!timeoutPromise) {\n                            timeoutPromise = new Promise(resolve => setTimeout(resolve, 1000));\n                            elementTimeouts.set(localName, timeoutPromise);\n                        }\n                        await Promise.race([whenDefinedPromise, timeoutPromise]);\n                    }\n                    window.customElements.upgrade(child);\n                }\n            }\n            child = ctor.getMetadata().constructor.validateSlotValue(child, slotData);\n            // Listen for any invalidation on the child if invalidateOnChildChange is true or an object (ignore when false or not set)\n            if (instanceOfUI5Element(child) && slotData.invalidateOnChildChange) {\n                const childChangeListener = this._getChildChangeListener(slotName);\n                if (childChangeListener) {\n                    child.attachInvalidate.call(child, childChangeListener);\n                }\n            }\n            // Listen for the slotchange event if the child is a slot itself\n            if (child instanceof HTMLSlotElement) {\n                this._attachSlotChange(child, slotName);\n            }\n            const propertyName = slotData.propertyName || slotName;\n            if (slottedChildrenMap.has(propertyName)) {\n                slottedChildrenMap.get(propertyName).push({ child, idx });\n            }\n            else {\n                slottedChildrenMap.set(propertyName, [{ child, idx }]);\n            }\n        });\n        await Promise.all(allChildrenUpgraded);\n        // Distribute the child in the _state object, keeping the Light DOM order,\n        // not the order elements are defined.\n        slottedChildrenMap.forEach((children, propertyName) => {\n            this._state[propertyName] = children.sort((a, b) => a.idx - b.idx).map(_ => _.child);\n        });\n        // Compare the content of each slot with the cached values and invalidate for the ones that changed\n        let invalidated = false;\n        for (const [slotName, slotData] of Object.entries(slotsMap)) { // eslint-disable-line\n            const propertyName = slotData.propertyName || slotName;\n            if (!arraysAreEqual(slotsCachedContentMap.get(propertyName), this._state[propertyName])) {\n                _invalidate.call(this, {\n                    type: \"slot\",\n                    name: propertyNameToSlotMap.get(propertyName),\n                    reason: \"children\",\n                });\n                invalidated = true;\n            }\n        }\n        // If none of the slots had an invalidation due to changes to immediate children,\n        // the change is considered to be text content of the default slot\n        if (!invalidated) {\n            _invalidate.call(this, {\n                type: \"slot\",\n                name: \"default\",\n                reason: \"textcontent\",\n            });\n        }\n    }\n    /**\n     * Removes all children from the slot and detaches listeners, if any\n     * @private\n     */\n    _clearSlot(slotName, slotData) {\n        const propertyName = slotData.propertyName || slotName;\n        const children = this._state[propertyName];\n        children.forEach(child => {\n            if (instanceOfUI5Element(child)) {\n                const childChangeListener = this._getChildChangeListener(slotName);\n                if (childChangeListener) {\n                    child.detachInvalidate.call(child, childChangeListener);\n                }\n            }\n            if (child instanceof HTMLSlotElement) {\n                this._detachSlotChange(child, slotName);\n            }\n        });\n        this._state[propertyName] = [];\n    }\n    /**\n     * Attach a callback that will be executed whenever the component is invalidated\n     *\n     * @param {InvalidationInfo} callback\n     * @public\n     */\n    attachInvalidate(callback) {\n        this._eventProvider.attachEvent(\"invalidate\", callback);\n    }\n    /**\n     * Detach the callback that is executed whenever the component is invalidated\n     *\n     * @param {InvalidationInfo} callback\n     * @public\n     */\n    detachInvalidate(callback) {\n        this._eventProvider.detachEvent(\"invalidate\", callback);\n    }\n    /**\n     * Callback that is executed whenever a monitored child changes its state\n     *\n     * @param {sting} slotName the slot in which a child was invalidated\n     * @param { ChangeInfo } childChangeInfo the changeInfo object for the child in the given slot\n     * @private\n     */\n    _onChildChange(slotName, childChangeInfo) {\n        if (!this.constructor.getMetadata().shouldInvalidateOnChildChange(slotName, childChangeInfo.type, childChangeInfo.name)) {\n            return;\n        }\n        // The component should be invalidated as this type of change on the child is listened for\n        // However, no matter what changed on the child (property/slot), the invalidation is registered as \"type=slot\" for the component itself\n        _invalidate.call(this, {\n            type: \"slot\",\n            name: slotName,\n            reason: \"childchange\",\n            child: childChangeInfo.target,\n        });\n    }\n    /**\n     * Do not override this method in derivatives of UI5Element\n     * @private\n     */\n    attributeChangedCallback(name, oldValue, newValue) {\n        let newPropertyValue;\n        if (this._doNotSyncAttributes.has(name)) { // This attribute is mutated internally, not by the user\n            return;\n        }\n        const properties = this.constructor.getMetadata().getProperties();\n        const realName = name.replace(/^ui5-/, \"\");\n        const nameInCamelCase = kebabToCamelCase(realName);\n        if (properties.hasOwnProperty(nameInCamelCase)) { // eslint-disable-line\n            const propData = properties[nameInCamelCase];\n            const propertyType = propData.type;\n            let propertyValidator = propData.validator;\n            if (propertyType && propertyType.isDataTypeClass) {\n                propertyValidator = propertyType;\n            }\n            if (propertyValidator) {\n                newPropertyValue = propertyValidator.attributeToProperty(newValue);\n            }\n            else if (propertyType === Boolean) {\n                newPropertyValue = newValue !== null;\n            }\n            else {\n                newPropertyValue = newValue;\n            }\n            this[nameInCamelCase] = newPropertyValue;\n        }\n    }\n    /**\n     * @private\n     */\n    _updateAttribute(name, newValue) {\n        const ctor = this.constructor;\n        if (!ctor.getMetadata().hasAttribute(name)) {\n            return;\n        }\n        const properties = ctor.getMetadata().getProperties();\n        const propData = properties[name];\n        const propertyType = propData.type;\n        let propertyValidator = propData.validator;\n        const attrName = camelToKebabCase(name);\n        const attrValue = this.getAttribute(attrName);\n        if (propertyType && propertyType.isDataTypeClass) {\n            propertyValidator = propertyType;\n        }\n        if (propertyValidator) {\n            const newAttrValue = propertyValidator.propertyToAttribute(newValue);\n            if (newAttrValue === null) { // null means there must be no attribute for the current value of the property\n                this._doNotSyncAttributes.add(attrName); // skip the attributeChangedCallback call for this attribute\n                this.removeAttribute(attrName); // remove the attribute safely (will not trigger synchronization to the property value due to the above line)\n                this._doNotSyncAttributes.delete(attrName); // enable synchronization again for this attribute\n            }\n            else {\n                this.setAttribute(attrName, newAttrValue);\n            }\n        }\n        else if (propertyType === Boolean) {\n            if (newValue === true && attrValue === null) {\n                this.setAttribute(attrName, \"\");\n            }\n            else if (newValue === false && attrValue !== null) {\n                this.removeAttribute(attrName);\n            }\n        }\n        else if (typeof newValue !== \"object\") {\n            if (attrValue !== newValue) {\n                this.setAttribute(attrName, newValue);\n            }\n        } // else { return; } // old object handling\n    }\n    /**\n     * @private\n     */\n    _upgradeProperty(propertyName) {\n        if (this.hasOwnProperty(propertyName)) { // eslint-disable-line\n            const value = this[propertyName];\n            delete this[propertyName];\n            this[propertyName] = value;\n        }\n    }\n    /**\n     * @private\n     */\n    _upgradeAllProperties() {\n        const allProps = this.constructor.getMetadata().getPropertiesList();\n        allProps.forEach(this._upgradeProperty.bind(this));\n    }\n    /**\n     * Returns a singleton event listener for the \"change\" event of a child in a given slot\n     *\n     * @param slotName the name of the slot, where the child is\n     * @returns {ChildChangeListener}\n     * @private\n     */\n    _getChildChangeListener(slotName) {\n        if (!this._childChangeListeners.has(slotName)) {\n            this._childChangeListeners.set(slotName, this._onChildChange.bind(this, slotName));\n        }\n        return this._childChangeListeners.get(slotName);\n    }\n    /**\n     * Returns a singleton slotchange event listener that invalidates the component due to changes in the given slot\n     *\n     * @param slotName the name of the slot, where the slot element (whose slotchange event we're listening to) is\n     * @returns {SlotChangeListener}\n     * @private\n     */\n    _getSlotChangeListener(slotName) {\n        if (!this._slotChangeListeners.has(slotName)) {\n            this._slotChangeListeners.set(slotName, this._onSlotChange.bind(this, slotName));\n        }\n        return this._slotChangeListeners.get(slotName);\n    }\n    /**\n     * @private\n     */\n    _attachSlotChange(child, slotName) {\n        const slotChangeListener = this._getSlotChangeListener(slotName);\n        if (slotChangeListener) {\n            child.addEventListener(\"slotchange\", slotChangeListener);\n        }\n    }\n    /**\n     * @private\n     */\n    _detachSlotChange(child, slotName) {\n        child.removeEventListener(\"slotchange\", this._getSlotChangeListener(slotName));\n    }\n    /**\n     * Whenever a slot element is slotted inside a UI5 Web Component, its slotchange event invalidates the component\n     *\n     * @param slotName the name of the slot, where the slot element (whose slotchange event we're listening to) is\n     * @private\n     */\n    _onSlotChange(slotName) {\n        _invalidate.call(this, {\n            type: \"slot\",\n            name: slotName,\n            reason: \"slotchange\",\n        });\n    }\n    /**\n     * A callback that is executed each time an already rendered component is invalidated (scheduled for re-rendering)\n     *\n     * @param  changeInfo An object with information about the change that caused invalidation.\n     * The object can have the following properties:\n     *  - type: (property|slot) tells what caused the invalidation\n     *   1) property: a property value was changed either directly or as a result of changing the corresponding attribute\n     *   2) slot: a slotted node(nodes) changed in one of several ways (see \"reason\")\n     *\n     *  - name: the name of the property or slot that caused the invalidation\n     *\n     *  - reason: (children|textcontent|childchange|slotchange) relevant only for type=\"slot\" only and tells exactly what changed in the slot\n     *   1) children: immediate children (HTML elements or text nodes) were added, removed or reordered in the slot\n     *   2) textcontent: text nodes in the slot changed value (or nested text nodes were added or changed value). Can only trigger for slots of \"type: Node\"\n     *   3) slotchange: a slot element, slotted inside that slot had its \"slotchange\" event listener called. This practically means that transitively slotted children changed.\n     *      Can only trigger if the child of a slot is a slot element itself.\n     *   4) childchange: indicates that a UI5Element child in that slot was invalidated and in turn invalidated the component.\n     *      Can only trigger for slots with \"invalidateOnChildChange\" metadata descriptor\n     *\n     *  - newValue: the new value of the property (for type=\"property\" only)\n     *\n     *  - oldValue: the old value of the property (for type=\"property\" only)\n     *\n     *  - child the child that was changed (for type=\"slot\" and reason=\"childchange\" only)\n     *\n     * @public\n     */\n    onInvalidation(changeInfo) { } // eslint-disable-line\n    /**\n     * Do not call this method directly, only intended to be called by js\n     * @protected\n     */\n    _render() {\n        const ctor = this.constructor;\n        const hasIndividualSlots = ctor.getMetadata().hasIndividualSlots();\n        // suppress invalidation to prevent state changes scheduling another rendering\n        this._suppressInvalidation = true;\n        this.onBeforeRendering();\n        // Intended for framework usage only. Currently ItemNavigation updates tab indexes after the component has updated its state but before the template is rendered\n        if (this._onComponentStateFinalized) {\n            this._onComponentStateFinalized();\n        }\n        // resume normal invalidation handling\n        this._suppressInvalidation = false;\n        // Update the shadow root with the render result\n        /*\n        if (this._changedState.length) {\n            let element = this.localName;\n            if (this.id) {\n                element = `${element}#${this.id}`;\n            }\n            console.log(\"Re-rendering:\", element, this._changedState.map(x => { // eslint-disable-line\n                let res = `${x.type}`;\n                if (x.reason) {\n                    res = `${res}(${x.reason})`;\n                }\n                res = `${res}: ${x.name}`;\n                if (x.type === \"property\") {\n                    res = `${res} ${JSON.stringify(x.oldValue)} => ${JSON.stringify(x.newValue)}`;\n                }\n\n                return res;\n            }));\n        }\n        */\n        this._changedState = [];\n        // Update shadow root and static area item\n        if (ctor._needsShadowDOM()) {\n            updateShadowRoot(this);\n        }\n        if (this.staticAreaItem) {\n            this.staticAreaItem.update();\n        }\n        // Safari requires that children get the slot attribute only after the slot tags have been rendered in the shadow DOM\n        if (hasIndividualSlots) {\n            this._assignIndividualSlotsToChildren();\n        }\n        // Call the onAfterRendering hook\n        this.onAfterRendering();\n    }\n    /**\n     * @private\n     */\n    _assignIndividualSlotsToChildren() {\n        const domChildren = Array.from(this.children);\n        domChildren.forEach((child) => {\n            if (child._individualSlot) {\n                child.setAttribute(\"slot\", child._individualSlot);\n            }\n        });\n    }\n    /**\n     * @private\n     */\n    _waitForDomRef() {\n        return this._domRefReadyPromise;\n    }\n    /**\n     * Returns the DOM Element inside the Shadow Root that corresponds to the opening tag in the UI5 Web Component's template\n     * *Note:* For logical (abstract) elements (items, options, etc...), returns the part of the parent's DOM that represents this option\n     * Use this method instead of \"this.shadowRoot\" to read the Shadow DOM, if ever necessary\n     *\n     * @public\n     */\n    getDomRef() {\n        // If a component set _getRealDomRef to its children, use the return value of this function\n        if (typeof this._getRealDomRef === \"function\") {\n            return this._getRealDomRef();\n        }\n        if (!this.shadowRoot || this.shadowRoot.children.length === 0) {\n            return;\n        }\n        const children = [...this.shadowRoot.children].filter(child => ![\"link\", \"style\"].includes(child.localName));\n        if (children.length !== 1) {\n            console.warn(`The shadow DOM for ${this.constructor.getMetadata().getTag()} does not have a top level element, the getDomRef() method might not work as expected`); // eslint-disable-line\n        }\n        return children[0];\n    }\n    /**\n     * Returns the DOM Element marked with \"data-sap-focus-ref\" inside the template.\n     * This is the element that will receive the focus by default.\n     * @public\n     */\n    getFocusDomRef() {\n        const domRef = this.getDomRef();\n        if (domRef) {\n            const focusRef = domRef.querySelector(\"[data-sap-focus-ref]\");\n            return focusRef || domRef;\n        }\n    }\n    /**\n     * Waits for dom ref and then returns the DOM Element marked with \"data-sap-focus-ref\" inside the template.\n     * This is the element that will receive the focus by default.\n     * @public\n     */\n    async getFocusDomRefAsync() {\n        await this._waitForDomRef();\n        return this.getFocusDomRef();\n    }\n    /**\n     * Set the focus to the element, returned by \"getFocusDomRef()\" (marked by \"data-sap-focus-ref\")\n     * @param {FocusOptions} focusOptions additional options for the focus\n     * @public\n     */\n    async focus(focusOptions) {\n        await this._waitForDomRef();\n        const focusDomRef = this.getFocusDomRef();\n        if (focusDomRef && typeof focusDomRef.focus === \"function\") {\n            focusDomRef.focus(focusOptions);\n        }\n    }\n    /**\n     *\n     * @public\n     * @param name - name of the event\n     * @param data - additional data for the event\n     * @param cancelable - true, if the user can call preventDefault on the event object\n     * @param bubbles - true, if the event bubbles\n     * @returns {boolean} false, if the event was cancelled (preventDefault called), true otherwise\n     */\n    fireEvent(name, data, cancelable = false, bubbles = true) {\n        const eventResult = this._fireEvent(name, data, cancelable, bubbles);\n        const camelCaseEventName = kebabToCamelCase(name);\n        if (camelCaseEventName !== name) {\n            return eventResult && this._fireEvent(camelCaseEventName, data, cancelable);\n        }\n        return eventResult;\n    }\n    _fireEvent(name, data, cancelable = false, bubbles = true) {\n        const noConflictEvent = new CustomEvent(`ui5-${name}`, {\n            detail: data,\n            composed: false,\n            bubbles,\n            cancelable,\n        });\n        // This will be false if the no-conflict event is prevented\n        const noConflictEventResult = this.dispatchEvent(noConflictEvent);\n        if (skipOriginalEvent(name)) {\n            return noConflictEventResult;\n        }\n        const normalEvent = new CustomEvent(name, {\n            detail: data,\n            composed: false,\n            bubbles,\n            cancelable,\n        });\n        // This will be false if the normal event is prevented\n        const normalEventResult = this.dispatchEvent(normalEvent);\n        // Return false if any of the two events was prevented (its result was false).\n        return normalEventResult && noConflictEventResult;\n    }\n    /**\n     * Returns the actual children, associated with a slot.\n     * Useful when there are transitive slots in nested component scenarios and you don't want to get a list of the slots, but rather of their content.\n     * @public\n     */\n    getSlottedNodes(slotName) {\n        return getSlottedNodesList(this[slotName]);\n    }\n    /**\n     * Determines whether the component should be rendered in RTL mode or not.\n     * Returns: \"rtl\", \"ltr\" or undefined\n     *\n     * @public\n     * @returns {String|undefined}\n     */\n    get effectiveDir() {\n        markAsRtlAware(this.constructor); // if a UI5 Element calls this method, it's considered to be rtl-aware\n        return getEffectiveDir(this);\n    }\n    /**\n     * Used to duck-type UI5 elements without using instanceof\n     * @returns {boolean}\n     * @public\n     */\n    get isUI5Element() {\n        return true;\n    }\n    get classes() {\n        return {};\n    }\n    /**\n     * Do not override this method in derivatives of UI5Element, use metadata properties instead\n     * @private\n     */\n    static get observedAttributes() {\n        return this.getMetadata().getAttributesList();\n    }\n    /**\n     * @private\n     */\n    static _needsShadowDOM() {\n        return !!this.template || Object.prototype.hasOwnProperty.call(this.prototype, \"render\");\n    }\n    /**\n     * @private\n     */\n    static _needsStaticArea() {\n        return !!this.staticAreaTemplate || Object.prototype.hasOwnProperty.call(this.prototype, \"renderStatic\");\n    }\n    /**\n     * @public\n     */\n    getStaticAreaItemDomRef() {\n        if (!this.constructor._needsStaticArea()) {\n            throw new Error(\"This component does not use the static area\");\n        }\n        if (!this.staticAreaItem) {\n            this.staticAreaItem = StaticAreaItem.createInstance();\n            this.staticAreaItem.setOwnerElement(this);\n        }\n        if (!this.staticAreaItem.parentElement) {\n            getSingletonElementInstance(\"ui5-static-area\").appendChild(this.staticAreaItem);\n        }\n        return this.staticAreaItem.getDomRef();\n    }\n    /**\n     * @private\n     */\n    static _generateAccessors() {\n        const proto = this.prototype;\n        const slotsAreManaged = this.getMetadata().slotsAreManaged();\n        // Properties\n        const properties = this.getMetadata().getProperties();\n        for (const [prop, propData] of Object.entries(properties)) { // eslint-disable-line\n            if (!isValidPropertyName(prop)) {\n                console.warn(`\"${prop}\" is not a valid property name. Use a name that does not collide with DOM APIs`); /* eslint-disable-line */\n            }\n            if (propData.type === Boolean && propData.defaultValue) {\n                throw new Error(`Cannot set a default value for property \"${prop}\". All booleans are false by default.`);\n            }\n            if (propData.type === Array) {\n                throw new Error(`Wrong type for property \"${prop}\". Properties cannot be of type Array - use \"multiple: true\" and set \"type\" to the single value type, such as \"String\", \"Object\", etc...`);\n            }\n            if (propData.type === Object && propData.defaultValue) {\n                throw new Error(`Cannot set a default value for property \"${prop}\". All properties of type \"Object\" are empty objects by default.`);\n            }\n            if (propData.multiple && propData.defaultValue) {\n                throw new Error(`Cannot set a default value for property \"${prop}\". All multiple properties are empty arrays by default.`);\n            }\n            Object.defineProperty(proto, prop, {\n                get() {\n                    if (this._state[prop] !== undefined) {\n                        return this._state[prop];\n                    }\n                    const propDefaultValue = propData.defaultValue;\n                    if (propData.type === Boolean) {\n                        return false;\n                    }\n                    else if (propData.type === String) { // eslint-disable-line\n                        return propDefaultValue;\n                    }\n                    else if (propData.multiple) { // eslint-disable-line\n                        return [];\n                    }\n                    else {\n                        return propDefaultValue;\n                    }\n                },\n                set(value) {\n                    let isDifferent;\n                    const ctor = this.constructor;\n                    const metadataCtor = ctor.getMetadata().constructor;\n                    value = metadataCtor.validatePropertyValue(value, propData);\n                    const propertyType = propData.type;\n                    let propertyValidator = propData.validator;\n                    const oldState = this._state[prop];\n                    if (propertyType && propertyType.isDataTypeClass) {\n                        propertyValidator = propertyType;\n                    }\n                    if (propertyValidator) {\n                        isDifferent = !propertyValidator.valuesAreEqual(oldState, value);\n                    }\n                    else if (Array.isArray(oldState) && Array.isArray(value) && propData.multiple && propData.compareValues) { // compareValues is added for IE, test if needed now\n                        isDifferent = !arraysAreEqual(oldState, value);\n                    }\n                    else {\n                        isDifferent = oldState !== value;\n                    }\n                    if (isDifferent) {\n                        this._state[prop] = value;\n                        _invalidate.call(this, {\n                            type: \"property\",\n                            name: prop,\n                            newValue: value,\n                            oldValue: oldState,\n                        });\n                        this._updateAttribute(prop, value);\n                    }\n                },\n            });\n        }\n        // Slots\n        if (slotsAreManaged) {\n            const slots = this.getMetadata().getSlots();\n            for (const [slotName, slotData] of Object.entries(slots)) { // eslint-disable-line\n                if (!isValidPropertyName(slotName)) {\n                    console.warn(`\"${slotName}\" is not a valid property name. Use a name that does not collide with DOM APIs`); /* eslint-disable-line */\n                }\n                const propertyName = slotData.propertyName || slotName;\n                Object.defineProperty(proto, propertyName, {\n                    get() {\n                        if (this._state[propertyName] !== undefined) {\n                            return this._state[propertyName];\n                        }\n                        return [];\n                    },\n                    set() {\n                        throw new Error(\"Cannot set slot content directly, use the DOM APIs (appendChild, removeChild, etc...)\");\n                    },\n                });\n            }\n        }\n    }\n    /**\n     * Returns the CSS for this UI5 Web Component Class\n     * @protected\n     */\n    static get styles() {\n        return \"\";\n    }\n    /**\n     * Returns the Static Area CSS for this UI5 Web Component Class\n     * @protected\n     */\n    static get staticAreaStyles() {\n        return \"\";\n    }\n    /**\n     * Returns an array with the dependencies for this UI5 Web Component, which could be:\n     *  - composed components (used in its shadow root or static area item)\n     *  - slotted components that the component may need to communicate with\n     *\n     * @protected\n     */\n    static get dependencies() {\n        return [];\n    }\n    /**\n     * Returns a list of the unique dependencies for this UI5 Web Component\n     *\n     * @public\n     */\n    static getUniqueDependencies() {\n        if (!uniqueDependenciesCache.has(this)) {\n            const filtered = this.dependencies.filter((dep, index, deps) => deps.indexOf(dep) === index);\n            uniqueDependenciesCache.set(this, filtered);\n        }\n        return uniqueDependenciesCache.get(this) || [];\n    }\n    /**\n     * Returns a promise that resolves whenever all dependencies for this UI5 Web Component have resolved\n     *\n     * @returns {Promise}\n     */\n    static whenDependenciesDefined() {\n        return Promise.all(this.getUniqueDependencies().map(dep => dep.define()));\n    }\n    /**\n     * Hook that will be called upon custom element definition\n     *\n     * @protected\n     * @returns {Promise<void>}\n     */\n    static async onDefine() {\n        return Promise.resolve();\n    }\n    /**\n     * Registers a UI5 Web Component in the browser window object\n     * @public\n     * @returns {Promise<UI5Element>}\n     */\n    static async define() {\n        await boot();\n        await Promise.all([\n            this.whenDependenciesDefined(),\n            this.onDefine(),\n        ]);\n        const tag = this.getMetadata().getTag();\n        const definedLocally = isTagRegistered(tag);\n        const definedGlobally = customElements.get(tag);\n        if (definedGlobally && !definedLocally) {\n            recordTagRegistrationFailure(tag);\n        }\n        else if (!definedGlobally) {\n            this._generateAccessors();\n            registerTag(tag);\n            window.customElements.define(tag, this);\n            preloadLinks(this);\n        }\n        return this;\n    }\n    /**\n     * Returns an instance of UI5ElementMetadata.js representing this UI5 Web Component's full metadata (its and its parents')\n     * Note: not to be confused with the \"get metadata()\" method, which returns an object for this class's metadata only\n     * @public\n     * @returns {UI5ElementMetadata}\n     */\n    static getMetadata() {\n        if (this.hasOwnProperty(\"_metadata\")) { // eslint-disable-line\n            return this._metadata;\n        }\n        const metadataObjects = [this.metadata];\n        let klass = this; // eslint-disable-line\n        while (klass !== UI5Element) {\n            klass = Object.getPrototypeOf(klass);\n            metadataObjects.unshift(klass.metadata);\n        }\n        const mergedMetadata = merge({}, ...metadataObjects);\n        this._metadata = new UI5ElementMetadata(mergedMetadata);\n        return this._metadata;\n    }\n}\n/**\n * Returns the metadata object for this UI5 Web Component Class\n * @protected\n */\nUI5Element.metadata = {};\n/**\n * Always use duck-typing to cover all runtimes on the page.\n * @returns {boolean}\n */\nconst instanceOfUI5Element = (object) => {\n    return \"isUI5Element\" in object;\n};\nexport default UI5Element;\nexport { instanceOfUI5Element };\n//# sourceMappingURL=UI5Element.js.map","/**\n * Returns a custom element class decorator.\n *\n * @param { string | object } tagNameOrComponentSettings\n * @returns { ClassDecorator }\n */\nconst customElement = (tagNameOrComponentSettings) => {\n    return (target) => {\n        if (!Object.prototype.hasOwnProperty.call(target, \"metadata\")) {\n            target.metadata = {};\n        }\n        if (typeof tagNameOrComponentSettings === \"string\") {\n            target.metadata.tag = tagNameOrComponentSettings;\n            return;\n        }\n        const { tag, languageAware, themeAware, fastNavigation, } = tagNameOrComponentSettings;\n        target.metadata.tag = tag;\n        if (languageAware) {\n            target.metadata.languageAware = languageAware;\n        }\n        if (themeAware) {\n            target.metadata.themeAware = themeAware;\n        }\n        if (fastNavigation) {\n            target.metadata.fastNavigation = fastNavigation;\n        }\n        [\"render\", \"renderer\", \"template\", \"staticAreaTemplate\", \"styles\", \"staticAreaStyles\", \"dependencies\"].forEach((customElementEntity) => {\n            const _customElementEntity = customElementEntity === \"render\" ? \"renderer\" : customElementEntity;\n            const customElementEntityValue = tagNameOrComponentSettings[_customElementEntity];\n            customElementEntityValue && Object.defineProperty(target, customElementEntity, {\n                get: () => customElementEntityValue,\n            });\n        });\n    };\n};\nexport default customElement;\n//# sourceMappingURL=customElement.js.map","/**\n * Returns a property decorator.\n *\n * @param { Property } propData\n * @returns { PropertyDecorator }\n */\nconst property = (propData) => {\n    return (target, propertyKey) => {\n        const ctor = target.constructor;\n        if (!Object.prototype.hasOwnProperty.call(ctor, \"metadata\")) {\n            ctor.metadata = {};\n        }\n        const metadata = ctor.metadata;\n        if (!metadata.properties) {\n            metadata.properties = {};\n        }\n        const propsMetadata = metadata.properties;\n        if (!propsMetadata[propertyKey]) {\n            propsMetadata[propertyKey] = propData || { type: String };\n        }\n    };\n};\nexport default property;\n//# sourceMappingURL=property.js.map","import{nothing as t}from\"../lit-html.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const l=l=>null!=l?l:t;export{l as ifDefined};\n//# sourceMappingURL=if-defined.js.map\n","import{nothing as t,noChange as i}from\"../lit-html.js\";import{Directive as r,PartType as s,directive as n}from\"../directive.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */class e extends r{constructor(i){if(super(i),this.it=t,i.type!==s.CHILD)throw Error(this.constructor.directiveName+\"() can only be used in child bindings\")}render(r){if(r===t||null==r)return this._t=void 0,this.it=r;if(r===i)return r;if(\"string\"!=typeof r)throw Error(this.constructor.directiveName+\"() called with a non-string value\");if(r===this.it)return this._t;this.it=r;const s=[r];return s.raw=s,this._t={_$litType$:this.constructor.resultType,strings:s,values:[]}}}e.directiveName=\"unsafeHTML\",e.resultType=1;const o=n(e);export{e as UnsafeHTMLDirective,o as unsafeHTML};\n//# sourceMappingURL=unsafe-html.js.map\n","import { render, html, svg, } from \"lit-html\";\nimport { getFeature } from \"../FeaturesRegistry.js\";\nconst effectiveHtml = (strings, ...values) => {\n    const litStatic = getFeature(\"LitStatic\");\n    const fn = litStatic ? litStatic.html : html;\n    return fn(strings, ...values);\n};\nconst effectiveSvg = (strings, ...values) => {\n    const litStatic = getFeature(\"LitStatic\");\n    const fn = litStatic ? litStatic.svg : svg;\n    return fn(strings, ...values);\n};\nconst litRender = (templateResult, container, styleStrOrHrefsArr, forStaticArea, options) => {\n    const openUI5Enablement = getFeature(\"OpenUI5Enablement\");\n    if (openUI5Enablement && !forStaticArea) {\n        templateResult = openUI5Enablement.wrapTemplateResultInBusyMarkup(effectiveHtml, options.host, templateResult);\n    }\n    if (typeof styleStrOrHrefsArr === \"string\") {\n        templateResult = effectiveHtml `<style>${styleStrOrHrefsArr}</style>${templateResult}`;\n    }\n    else if (Array.isArray(styleStrOrHrefsArr) && styleStrOrHrefsArr.length) {\n        templateResult = effectiveHtml `${styleStrOrHrefsArr.map(href => effectiveHtml `<link type=\"text/css\" rel=\"stylesheet\" href=\"${href}\">`)}${templateResult}`;\n    }\n    render(templateResult, container, options);\n};\nconst scopeTag = (tag, tags, suffix) => {\n    const litStatic = getFeature(\"LitStatic\");\n    if (litStatic) {\n        return litStatic.unsafeStatic((tags || []).includes(tag) ? `${tag}-${suffix}` : tag);\n    }\n};\nexport { effectiveHtml as html, effectiveSvg as svg, };\nexport { scopeTag };\nexport { repeat } from \"lit-html/directives/repeat.js\";\nexport { classMap } from \"lit-html/directives/class-map.js\";\n// @ts-ignore style-map is a JS file\nexport { styleMap } from \"./directives/style-map.js\";\nexport { ifDefined } from \"lit-html/directives/if-defined.js\";\nexport { unsafeHTML } from \"lit-html/directives/unsafe-html.js\";\nexport default litRender;\n//# sourceMappingURL=LitRenderer.js.map","const styleData = { packageName: \"@ui5/webcomponents-theming\", fileName: \"themes/sap_fiori_3/parameters-bundle.css\", content: \":root{--sapThemeMetaData-Base-baseLib:{\\\"Path\\\":\\\"Base.baseLib.sap_fiori_3.css_variables\\\",\\\"PathPattern\\\":\\\"/%frameworkId%/%libId%/%themeId%/%fileId%.css\\\",\\\"Extends\\\":[\\\"sap_base_fiori\\\",\\\"baseTheme\\\"],\\\"Tags\\\":[\\\"Fiori_3\\\",\\\"LightColorScheme\\\"],\\\"FallbackThemeId\\\":\\\"sap_belize\\\",\\\"Engine\\\":{\\\"Name\\\":\\\"theming-engine\\\",\\\"Version\\\":\\\"1.23030.0-20230404052500+08ab7f203f968a8915a46326f198b28734934650\\\"},\\\"Version\\\":{ \\\"Build\\\":\\\"11.3.2.20230406131255\\\",\\\"Source\\\":\\\"11.3.2\\\"}};--sapBrandColor:#0a6ed1;--sapHighlightColor:#0854a0;--sapBaseColor:#fff;--sapShellColor:#354a5f;--sapBackgroundColor:#f7f7f7;--sapFontFamily:\\\"72\\\",\\\"72full\\\",Arial,Helvetica,sans-serif;--sapFontSize:.875rem;--sapTextColor:#32363a;--sapLinkColor:#0a6ed1;--sapCompanyLogo:none;--sapBackgroundImage:none;--sapBackgroundImageOpacity:1.0;--sapBackgroundImageRepeat:false;--sapSelectedColor:#0854a0;--sapHoverColor:#ededed;--sapActiveColor:#0854a0;--sapHighlightTextColor:#fff;--sapTitleColor:#32363a;--sapNegativeColor:#b00;--sapCriticalColor:#df6e0c;--sapPositiveColor:#107e3e;--sapInformativeColor:#0a6ed1;--sapNeutralColor:#6a6d70;--sapNegativeElementColor:#b00;--sapCriticalElementColor:#df6e0c;--sapPositiveElementColor:#107e3e;--sapInformativeElementColor:#0a6ed1;--sapNeutralElementColor:#6a6d70;--sapNegativeTextColor:#b00;--sapCriticalTextColor:#b3590a;--sapPositiveTextColor:#107e3e;--sapInformativeTextColor:#0a6ed1;--sapNeutralTextColor:#6a6d70;--sapErrorColor:#b00;--sapWarningColor:#df6e0c;--sapSuccessColor:#107e3e;--sapInformationColor:#0a6ed1;--sapErrorBackground:#ffebeb;--sapWarningBackground:#fef7f1;--sapSuccessBackground:#f1fdf6;--sapInformationBackground:#f5faff;--sapNeutralBackground:#f4f4f4;--sapErrorBorderColor:#b00;--sapWarningBorderColor:#df6e0c;--sapSuccessBorderColor:#107e3e;--sapInformationBorderColor:#0a6ed1;--sapNeutralBorderColor:#6a6d70;--sapElement_LineHeight:2.75rem;--sapElement_Height:2.25rem;--sapElement_BorderWidth:.0625rem;--sapElement_BorderCornerRadius:.25rem;--sapElement_Compact_LineHeight:2rem;--sapElement_Compact_Height:1.625rem;--sapElement_Condensed_LineHeight:1.5rem;--sapElement_Condensed_Height:1.375rem;--sapContent_LineHeight:1.4;--sapContent_IconHeight:1rem;--sapContent_IconColor:#0854a0;--sapContent_ContrastIconColor:#fff;--sapContent_NonInteractiveIconColor:#6a6d70;--sapContent_MarkerIconColor:#286eb4;--sapContent_MarkerTextColor:#0e7581;--sapContent_MeasureIndicatorColor:#89919a;--sapContent_Selected_MeasureIndicatorColor:#89919a;--sapContent_Placeholderloading_Background:#ccc;--sapContent_Placeholderloading_Gradient:linear-gradient(90deg,#ccc 0%,#ccc 20%,#999 50%,#ccc 80%,#ccc);--sapContent_ImagePlaceholderBackground:#ccc;--sapContent_ImagePlaceholderForegroundColor:#fff;--sapContent_RatedColor:#d08014;--sapContent_UnratedColor:#89919a;--sapContent_BusyColor:#0854a0;--sapContent_FocusColor:#000;--sapContent_FocusStyle:dotted;--sapContent_FocusWidth:.0625rem;--sapContent_ContrastFocusColor:#fff;--sapContent_ShadowColor:#000;--sapContent_ContrastShadowColor:#fff;--sapContent_Shadow0:0 0 0 0.0625rem rgba(0,0,0,0.1),0 0.125rem 0.5rem 0 rgba(0,0,0,0.1);--sapContent_Shadow1:0 0 0 0.0625rem rgba(0,0,0,0.42),0 0.125rem 0.5rem 0 rgba(0,0,0,0.3);--sapContent_Shadow2:0 0 0 0.0625rem rgba(0,0,0,0.42),0 0.625rem 1.875rem 0 rgba(0,0,0,0.3);--sapContent_Shadow3:0 0 0 0.0625rem rgba(0,0,0,0.42),0 1.25rem 5rem 0 rgba(0,0,0,0.3);--sapContent_TextShadow:0 0 0.125rem #fff;--sapContent_ContrastTextShadow:0 0 0.0625rem rgba(0,0,0,0.7);--sapContent_HeaderShadow:0 0.125rem 0.125rem 0 rgba(0,0,0,0.05),inset 0 -0.0625rem 0 0 #d9d9d9;--sapContent_Interaction_Shadow:none;--sapContent_Selected_Shadow:none;--sapContent_Negative_Shadow:none;--sapContent_Critical_Shadow:none;--sapContent_Positive_Shadow:none;--sapContent_Informative_Shadow:none;--sapContent_Neutral_Shadow:none;--sapContent_SearchHighlightColor:#d4f7db;--sapContent_HelpColor:#3f8600;--sapContent_LabelColor:#6a6d70;--sapContent_MonospaceFontFamily:\\\"72Mono\\\",\\\"72Monofull\\\",lucida console,monospace;--sapContent_MonospaceBoldFontFamily:\\\"72Mono-Bold\\\",\\\"72Mono-Boldfull\\\",lucida console,monospace;--sapContent_IconFontFamily:\\\"SAP-icons\\\";--sapContent_DisabledTextColor:rgba(50,54,58,0.6);--sapContent_DisabledOpacity:0.4;--sapContent_ContrastTextThreshold:0.65;--sapContent_ContrastTextColor:#fff;--sapContent_ForegroundColor:#efefef;--sapContent_ForegroundBorderColor:#89919a;--sapContent_ForegroundTextColor:#32363a;--sapContent_BadgeBackground:#d04343;--sapContent_BadgeTextColor:#fff;--sapContent_DragAndDropActiveColor:#0854a0;--sapContent_Selected_TextColor:#fff;--sapContent_Selected_Background:#0854a0;--sapContent_Selected_Hover_Background:#095caf;--sapContent_Selected_ForegroundColor:#0854a0;--sapContent_ForcedColorAdjust:none;--sapContent_Illustrative_Color1:#0a6ed1;--sapContent_Illustrative_Color2:#72b5f8;--sapContent_Illustrative_Color3:#ffba10;--sapContent_Illustrative_Color4:#4a5055;--sapContent_Illustrative_Color5:#9da4aa;--sapContent_Illustrative_Color6:#c6cace;--sapContent_Illustrative_Color7:#e7e9ea;--sapContent_Illustrative_Color8:#fff;--sapContent_Illustrative_Color9:#64edd2;--sapContent_Illustrative_Color10:#e7e9ea;--sapContent_Illustrative_Color11:#f31ded;--sapContent_Illustrative_Color12:#5dc122;--sapContent_Illustrative_Color13:#4ba1f6;--sapContent_Illustrative_Color14:#298ff4;--sapContent_Illustrative_Color15:#e6a400;--sapContent_Illustrative_Color16:#085aaa;--sapContent_Illustrative_Color17:#00a5a8;--sapContent_Illustrative_Color18:#d9ddde;--sapContent_Illustrative_Color19:#ccd0d2;--sapContent_Illustrative_Color20:#bec4c6;--sapFontLightFamily:\\\"72-Light\\\",\\\"72-Lightfull\\\",\\\"72\\\",\\\"72full\\\",Arial,Helvetica,sans-serif;--sapFontBoldFamily:\\\"72-Bold\\\",\\\"72-Boldfull\\\",\\\"72\\\",\\\"72full\\\",Arial,Helvetica,sans-serif;--sapFontSemiboldFamily:\\\"72-Semibold\\\",\\\"72-Semiboldfull\\\",\\\"72\\\",\\\"72full\\\",Arial,Helvetica,sans-serif;--sapFontSemiboldDuplexFamily:\\\"72-SemiboldDuplex\\\",\\\"72-SemiboldDuplexfull\\\",\\\"72\\\",\\\"72full\\\",Arial,Helvetica,sans-serif;--sapFontBlackFamily:\\\"72Black\\\",\\\"72Blackfull\\\",\\\"72\\\",\\\"72full\\\",Arial,Helvetica,sans-serif;--sapFontHeaderFamily:\\\"72\\\",\\\"72full\\\",Arial,Helvetica,sans-serif;--sapFontSmallSize:.75rem;--sapFontLargeSize:1rem;--sapFontHeader1Size:2.25rem;--sapFontHeader2Size:1.5rem;--sapFontHeader3Size:1.25rem;--sapFontHeader4Size:1.125rem;--sapFontHeader5Size:1rem;--sapFontHeader6Size:.875rem;--sapLink_TextDecoration:none;--sapLink_Hover_Color:#0854a0;--sapLink_Hover_TextDecoration:underline;--sapLink_Active_Color:#0a6ed1;--sapLink_Active_TextDecoration:underline;--sapLink_Visited_Color:#0a6ed1;--sapLink_InvertedColor:#d3e8fd;--sapLink_SubtleColor:#074888;--sapShell_Background:#edeff0;--sapShell_BackgroundImage:linear-gradient(180deg,#dfe3e4,#f3f4f5);--sapShell_BackgroundImageOpacity:1.0;--sapShell_BackgroundImageRepeat:false;--sapShell_BorderColor:#354a5f;--sapShell_TextColor:#fff;--sapShell_InteractiveBackground:#354a5f;--sapShell_InteractiveTextColor:#d1e8ff;--sapShell_InteractiveBorderColor:#7996b4;--sapShell_GroupTitleTextColor:#32363a;--sapShell_GroupTitleTextShadow:0 0 0.125rem #fff;--sapShell_Hover_Background:#283848;--sapShell_Active_Background:#23303e;--sapShell_Active_TextColor:#fff;--sapShell_Selected_Background:#23303e;--sapShell_Selected_TextColor:#fff;--sapShell_Selected_Hover_Background:#23303e;--sapShell_Favicon:none;--sapShell_Navigation_Background:#354a5f;--sapShell_Navigation_Hover_Background:#283848;--sapShell_Navigation_SelectedColor:#d1e8ff;--sapShell_Navigation_Selected_TextColor:#d1e8ff;--sapShell_Navigation_TextColor:#fff;--sapShell_Navigation_Active_TextColor:#fff;--sapShell_Navigation_Active_Background:#23303e;--sapShell_Shadow:0 0.125rem 0.125rem 0 rgba(0,0,0,0.08),inset 0 -0.0625rem 0 0 rgba(0,0,0,0.18);--sapShell_NegativeColor:#f88;--sapShell_CriticalColor:#f8b67d;--sapShell_PositiveColor:#abe2c2;--sapShell_InformativeColor:#b1d6fb;--sapShell_NeutralColor:#d4d6d7;--sapShell_Category_1_Background:#286eb4;--sapShell_Category_1_BorderColor:#286eb4;--sapShell_Category_1_TextColor:#fff;--sapShell_Category_1_TextShadow:0 0 .0625rem rgba(0,0,0,0.7);--sapShell_Category_2_Background:#db1f77;--sapShell_Category_2_BorderColor:#db1f77;--sapShell_Category_2_TextColor:#fff;--sapShell_Category_2_TextShadow:0 0 .0625rem rgba(0,0,0,0.7);--sapShell_Category_3_Background:#d58215;--sapShell_Category_3_BorderColor:#d58215;--sapShell_Category_3_TextColor:#fff;--sapShell_Category_3_TextShadow:0 0 .0625rem rgba(0,0,0,0.7);--sapShell_Category_4_Background:#892971;--sapShell_Category_4_BorderColor:#892971;--sapShell_Category_4_TextColor:#fff;--sapShell_Category_4_TextShadow:0 0 .0625rem rgba(0,0,0,0.7);--sapShell_Category_5_Background:#bb2f2f;--sapShell_Category_5_BorderColor:#bb2f2f;--sapShell_Category_5_TextColor:#fff;--sapShell_Category_5_TextShadow:0 0 .0625rem rgba(0,0,0,0.7);--sapShell_Category_6_Background:#1193a2;--sapShell_Category_6_BorderColor:#1193a2;--sapShell_Category_6_TextColor:#fff;--sapShell_Category_6_TextShadow:0 0 .0625rem rgba(0,0,0,0.7);--sapShell_Category_7_Background:#cf5db3;--sapShell_Category_7_BorderColor:#cf5db3;--sapShell_Category_7_TextColor:#fff;--sapShell_Category_7_TextShadow:0 0 .0625rem rgba(0,0,0,0.7);--sapShell_Category_8_Background:#8b9668;--sapShell_Category_8_BorderColor:#8b9668;--sapShell_Category_8_TextColor:#fff;--sapShell_Category_8_TextShadow:0 0 .0625rem rgba(0,0,0,0.7);--sapShell_Category_9_Background:#597da1;--sapShell_Category_9_BorderColor:#597da1;--sapShell_Category_9_TextColor:#fff;--sapShell_Category_9_TextShadow:0 0 .0625rem rgba(0,0,0,0.7);--sapShell_Category_10_Background:#647987;--sapShell_Category_10_BorderColor:#647987;--sapShell_Category_10_TextColor:#fff;--sapShell_Category_10_TextShadow:0 0 .0625rem rgba(0,0,0,0.7);--sapShell_Category_11_Background:#dc5b5b;--sapShell_Category_11_BorderColor:#dc5b5b;--sapShell_Category_11_TextColor:#fff;--sapShell_Category_11_TextShadow:0 0 .0625rem rgba(0,0,0,0.7);--sapShell_Category_12_Background:#5154bd;--sapShell_Category_12_BorderColor:#5154bd;--sapShell_Category_12_TextColor:#fff;--sapShell_Category_12_TextShadow:0 0 .0625rem rgba(0,0,0,0.7);--sapShell_Category_13_Background:#bc1b66;--sapShell_Category_13_BorderColor:#bc1b66;--sapShell_Category_13_TextColor:#fff;--sapShell_Category_13_TextShadow:0 0 .0625rem rgba(0,0,0,0.7);--sapShell_Category_14_Background:#49797e;--sapShell_Category_14_BorderColor:#49797e;--sapShell_Category_14_TextColor:#fff;--sapShell_Category_14_TextShadow:0 0 .0625rem rgba(0,0,0,0.7);--sapShell_Category_15_Background:#476380;--sapShell_Category_15_BorderColor:#476380;--sapShell_Category_15_TextColor:#fff;--sapShell_Category_15_TextShadow:0 0 .0625rem rgba(0,0,0,0.7);--sapShell_Category_16_Background:#687a33;--sapShell_Category_16_BorderColor:#687a33;--sapShell_Category_16_TextColor:#fff;--sapShell_Category_16_TextShadow:0 0 .0625rem rgba(0,0,0,0.7);--sapAvatar_1_Background:#d08014;--sapAvatar_1_BorderColor:#d08014;--sapAvatar_1_TextColor:#fff;--sapAvatar_2_Background:#d04343;--sapAvatar_2_BorderColor:#d04343;--sapAvatar_2_TextColor:#fff;--sapAvatar_3_Background:#db1f77;--sapAvatar_3_BorderColor:#db1f77;--sapAvatar_3_TextColor:#fff;--sapAvatar_4_Background:#c0399f;--sapAvatar_4_BorderColor:#c0399f;--sapAvatar_4_TextColor:#fff;--sapAvatar_5_Background:#6367de;--sapAvatar_5_BorderColor:#6367de;--sapAvatar_5_TextColor:#fff;--sapAvatar_6_Background:#286eb4;--sapAvatar_6_BorderColor:#286eb4;--sapAvatar_6_TextColor:#fff;--sapAvatar_7_Background:#0f828f;--sapAvatar_7_BorderColor:#0f828f;--sapAvatar_7_TextColor:#fff;--sapAvatar_8_Background:#7ca10c;--sapAvatar_8_BorderColor:#7ca10c;--sapAvatar_8_TextColor:#fff;--sapAvatar_9_Background:#925ace;--sapAvatar_9_BorderColor:#925ace;--sapAvatar_9_TextColor:#fff;--sapAvatar_10_Background:#647987;--sapAvatar_10_BorderColor:#647987;--sapAvatar_10_TextColor:#fff;--sapButton_Background:#fff;--sapButton_BorderColor:#0854a0;--sapButton_BorderWidth:.0625rem;--sapButton_BorderCornerRadius:.25rem;--sapButton_TextColor:#0854a0;--sapButton_Hover_Background:#ebf5fe;--sapButton_Hover_BorderColor:#0854a0;--sapButton_Hover_TextColor:#0854a0;--sapButton_IconColor:#0854a0;--sapButton_Active_Background:#0854a0;--sapButton_Active_BorderColor:#0854a0;--sapButton_Active_TextColor:#fff;--sapButton_Emphasized_Background:#0a6ed1;--sapButton_Emphasized_BorderColor:#0a6ed1;--sapButton_Emphasized_TextColor:#fff;--sapButton_Emphasized_Hover_Background:#085caf;--sapButton_Emphasized_Hover_BorderColor:#085caf;--sapButton_Emphasized_Hover_TextColor:#fff;--sapButton_Emphasized_Active_Background:#0854a0;--sapButton_Emphasized_Active_BorderColor:#0854a0;--sapButton_Emphasized_Active_TextColor:#fff;--sapButton_Emphasized_TextShadow:transparent;--sapButton_Emphasized_FontWeight:bold;--sapButton_Reject_Background:#fff;--sapButton_Reject_BorderColor:#b00;--sapButton_Reject_TextColor:#b00;--sapButton_Reject_Hover_Background:#ffebeb;--sapButton_Reject_Hover_BorderColor:#b00;--sapButton_Reject_Hover_TextColor:#b00;--sapButton_Reject_Active_Background:#a20000;--sapButton_Reject_Active_BorderColor:#a20000;--sapButton_Reject_Active_TextColor:#fff;--sapButton_Reject_Selected_Background:#a20000;--sapButton_Reject_Selected_BorderColor:#a20000;--sapButton_Reject_Selected_TextColor:#fff;--sapButton_Reject_Selected_Hover_Background:#b00;--sapButton_Reject_Selected_Hover_BorderColor:#b00;--sapButton_Accept_Background:#fff;--sapButton_Accept_BorderColor:#107e3e;--sapButton_Accept_TextColor:#107e3e;--sapButton_Accept_Hover_Background:#f1fdf6;--sapButton_Accept_Hover_BorderColor:#107e3e;--sapButton_Accept_Hover_TextColor:#107e3e;--sapButton_Accept_Active_Background:#0d6733;--sapButton_Accept_Active_BorderColor:#0d6733;--sapButton_Accept_Active_TextColor:#fff;--sapButton_Accept_Selected_Background:#0d6733;--sapButton_Accept_Selected_BorderColor:#0d6733;--sapButton_Accept_Selected_TextColor:#fff;--sapButton_Accept_Selected_Hover_Background:#107e3e;--sapButton_Accept_Selected_Hover_BorderColor:#107e3e;--sapButton_Lite_Background:transparent;--sapButton_Lite_BorderColor:transparent;--sapButton_Lite_TextColor:#0854a0;--sapButton_Lite_Hover_Background:#ebf5fe;--sapButton_Lite_Hover_BorderColor:#0854a0;--sapButton_Lite_Hover_TextColor:#0854a0;--sapButton_Lite_Active_Background:#0854a0;--sapButton_Lite_Active_BorderColor:#0854a0;--sapButton_Selected_Background:#0854a0;--sapButton_Selected_BorderColor:#0854a0;--sapButton_Selected_TextColor:#fff;--sapButton_Selected_Hover_Background:#095caf;--sapButton_Selected_Hover_BorderColor:#095caf;--sapButton_Attention_Background:#fff;--sapButton_Attention_BorderColor:#df6e0c;--sapButton_Attention_TextColor:#32363a;--sapButton_Attention_Hover_Background:#fef7f1;--sapButton_Attention_Hover_BorderColor:#df6e0c;--sapButton_Attention_Hover_TextColor:#32363a;--sapButton_Attention_Active_Background:#f3801c;--sapButton_Attention_Active_BorderColor:#f3801c;--sapButton_Attention_Active_TextColor:#fff;--sapButton_Attention_Selected_Background:#f3801c;--sapButton_Attention_Selected_BorderColor:#f3801c;--sapButton_Attention_Selected_TextColor:#fff;--sapButton_Attention_Selected_Hover_Background:#f48e34;--sapButton_Attention_Selected_Hover_BorderColor:#f48e34;--sapButton_Negative_Background:#b00;--sapButton_Negative_BorderColor:#b00;--sapButton_Negative_TextColor:#fff;--sapButton_Negative_Hover_Background:#970000;--sapButton_Negative_Hover_BorderColor:#970000;--sapButton_Negative_Hover_TextColor:#fff;--sapButton_Negative_Active_Background:#800;--sapButton_Negative_Active_BorderColor:#800;--sapButton_Negative_Active_TextColor:#fff;--sapButton_Critical_Background:#df6e0c;--sapButton_Critical_BorderColor:#df6e0c;--sapButton_Critical_TextColor:#fff;--sapButton_Critical_Hover_Background:#f3801c;--sapButton_Critical_Hover_BorderColor:#f3801c;--sapButton_Critical_Hover_TextColor:#fff;--sapButton_Critical_Active_Background:#f5933e;--sapButton_Critical_Active_BorderColor:#f5933e;--sapButton_Critical_Active_TextColor:#fff;--sapButton_Success_Background:#107e3e;--sapButton_Success_BorderColor:#107e3e;--sapButton_Success_TextColor:#fff;--sapButton_Success_Hover_Background:#0c5e2e;--sapButton_Success_Hover_BorderColor:#0c5e2e;--sapButton_Success_Hover_TextColor:#fff;--sapButton_Success_Active_Background:#0a5128;--sapButton_Success_Active_BorderColor:#0a5128;--sapButton_Success_Active_TextColor:#fff;--sapButton_Information_Background:#0a6ed1;--sapButton_Information_BorderColor:#0a6ed1;--sapButton_Information_TextColor:#fff;--sapButton_Information_Hover_Background:#0961b9;--sapButton_Information_Hover_BorderColor:#0961b9;--sapButton_Information_Hover_TextColor:#fff;--sapButton_Information_Active_Background:#0854a0;--sapButton_Information_Active_BorderColor:#0854a0;--sapButton_Information_Active_TextColor:#fff;--sapButton_Neutral_Background:#6a6d70;--sapButton_Neutral_BorderColor:#6a6d70;--sapButton_Neutral_TextColor:#fff;--sapButton_Neutral_Hover_Background:#595b5e;--sapButton_Neutral_Hover_BorderColor:#595b5e;--sapButton_Neutral_Hover_TextColor:#fff;--sapButton_Neutral_Active_Background:#515456;--sapButton_Neutral_Active_BorderColor:#515456;--sapButton_Neutral_Active_TextColor:#fff;--sapButton_Track_Background:#ededed;--sapButton_Track_BorderColor:#89919a;--sapButton_Track_TextColor:#32363a;--sapButton_Track_Hover_Background:#ededed;--sapButton_Track_Hover_BorderColor:#0854a0;--sapButton_Track_Selected_Background:#ebf5fe;--sapButton_Track_Selected_BorderColor:#0854a0;--sapButton_Track_Selected_TextColor:#32363a;--sapButton_Track_Selected_Hover_Background:#ebf5fe;--sapButton_Track_Selected_Hover_BorderColor:#095caf;--sapButton_Handle_Background:#fff;--sapButton_Handle_BorderColor:#89919a;--sapButton_Handle_TextColor:#32363a;--sapButton_Handle_Hover_Background:#ebf5fe;--sapButton_Handle_Hover_BorderColor:#0854a0;--sapButton_Handle_Selected_Background:#0854a0;--sapButton_Handle_Selected_BorderColor:#0854a0;--sapButton_Handle_Selected_TextColor:#fff;--sapButton_Handle_Selected_Hover_Background:#095caf;--sapButton_Handle_Selected_Hover_BorderColor:#095caf;--sapButton_Track_Negative_Background:#ffebeb;--sapButton_Track_Negative_BorderColor:#b00;--sapButton_Track_Negative_TextColor:#b00;--sapButton_Track_Negative_Hover_Background:#ffebeb;--sapButton_Track_Negative_Hover_BorderColor:#b00;--sapButton_Handle_Negative_Background:#fff;--sapButton_Handle_Negative_BorderColor:#b00;--sapButton_Handle_Negative_TextColor:#b00;--sapButton_Handle_Negative_Hover_Background:#ffebeb;--sapButton_Handle_Negative_Hover_BorderColor:#b00;--sapButton_Track_Positive_Background:#f1fdf6;--sapButton_Track_Positive_BorderColor:#107e3e;--sapButton_Track_Positive_TextColor:#107e3e;--sapButton_Track_Positive_Hover_Background:#f1fdf6;--sapButton_Track_Positive_Hover_BorderColor:#107e3e;--sapButton_Handle_Positive_Background:#fff;--sapButton_Handle_Positive_BorderColor:#107e3e;--sapButton_Handle_Positive_TextColor:#107e3e;--sapButton_Handle_Positive_Hover_Background:#f1fdf6;--sapButton_Handle_Positive_Hover_BorderColor:#107e3e;--sapButton_TokenBackground:#fafafa;--sapButton_TokenBorderColor:#c2c2c2;--sapField_Background:#fff;--sapField_BackgroundStyle:none;--sapField_TextColor:#32363a;--sapField_PlaceholderTextColor:#74777a;--sapField_BorderColor:#89919a;--sapField_HelpBackground:#fff;--sapField_BorderWidth:.0625rem;--sapField_BorderStyle:solid;--sapField_BorderCornerRadius:.125rem;--sapField_Shadow:none;--sapField_Hover_Background:#fff;--sapField_Hover_BackgroundStyle:none;--sapField_Hover_BorderColor:#0854a0;--sapField_Hover_HelpBackground:#ebf5fe;--sapField_Hover_Shadow:none;--sapField_Hover_InvalidShadow:none;--sapField_Hover_WarningShadow:none;--sapField_Hover_SuccessShadow:none;--sapField_Hover_InformationShadow:none;--sapField_Active_BorderColor:#0854a0;--sapField_Focus_Background:#fff;--sapField_Focus_BorderColor:#89919a;--sapField_Focus_HelpBackground:#fff;--sapField_ReadOnly_Background:hsla(0,0%,94.9%,0.5);--sapField_ReadOnly_BackgroundStyle:none;--sapField_ReadOnly_BorderColor:#89919a;--sapField_ReadOnly_BorderStyle:solid;--sapField_ReadOnly_HelpBackground:hsla(0,0%,94.9%,0.5);--sapField_RequiredColor:#ce3b3b;--sapField_InvalidColor:#b00;--sapField_InvalidBackground:#fff;--sapField_InvalidBackgroundStyle:none;--sapField_InvalidBorderWidth:.125rem;--sapField_InvalidBorderStyle:solid;--sapField_InvalidShadow:none;--sapField_WarningColor:#df6e0c;--sapField_WarningBackground:#fff;--sapField_WarningBackgroundStyle:none;--sapField_WarningBorderWidth:.125rem;--sapField_WarningBorderStyle:solid;--sapField_WarningShadow:none;--sapField_SuccessColor:#107e3e;--sapField_SuccessBackground:#fff;--sapField_SuccessBackgroundStyle:none;--sapField_SuccessBorderWidth:.0625rem;--sapField_SuccessBorderStyle:solid;--sapField_SuccessShadow:none;--sapField_InformationColor:#0a6ed1;--sapField_InformationBackground:#fff;--sapField_InformationBackgroundStyle:none;--sapField_InformationBorderWidth:.125rem;--sapField_InformationBorderStyle:solid;--sapField_InformationShadow:none;--sapGroup_TitleBackground:transparent;--sapGroup_TitleBorderColor:#d9d9d9;--sapGroup_TitleTextColor:#32363a;--sapGroup_Title_FontSize:1.125rem;--sapGroup_ContentBackground:#fff;--sapGroup_ContentBorderColor:#d9d9d9;--sapGroup_BorderWidth:.0625rem;--sapGroup_BorderCornerRadius:0;--sapGroup_FooterBackground:transparent;--sapToolbar_Background:transparent;--sapToolbar_SeparatorColor:#d9d9d9;--sapList_HeaderBackground:#f2f2f2;--sapList_HeaderBorderColor:#e5e5e5;--sapList_HeaderTextColor:#32363a;--sapList_BorderColor:#e5e5e5;--sapList_BorderWidth:.0625rem;--sapList_TextColor:#32363a;--sapList_Active_TextColor:#fff;--sapList_Active_Background:#0854a0;--sapList_SelectionBackgroundColor:#e5f0fa;--sapList_SelectionBorderColor:#0854a0;--sapList_Hover_SelectionBackground:#d8e9f8;--sapList_Background:#fff;--sapList_Hover_Background:#f5f5f5;--sapList_AlternatingBackground:#f2f2f2;--sapList_GroupHeaderBackground:#fff;--sapList_GroupHeaderBorderColor:#d9d9d9;--sapList_GroupHeaderTextColor:#32363a;--sapList_TableGroupHeaderBackground:#efefef;--sapList_TableGroupHeaderBorderColor:#d9d9d9;--sapList_TableGroupHeaderTextColor:#32363a;--sapList_FooterBackground:#fafafa;--sapList_FooterTextColor:#32363a;--sapList_TableFooterBorder:#d9d9d9;--sapList_TableFixedBorderColor:#8c8c8c;--sapMessage_ErrorBorderColor:#b00;--sapMessage_WarningBorderColor:#df6e0c;--sapMessage_SuccessBorderColor:#107e3e;--sapMessage_InformationBorderColor:#0a6ed1;--sapPopover_BorderCornerRadius:.25rem;--sapProgress_Background:#fff;--sapProgress_BorderColor:#89919a;--sapProgress_TextColor:#32363a;--sapProgress_FontSize:.75rem;--sapProgress_NegativeBackground:#fff;--sapProgress_NegativeBorderColor:#89919a;--sapProgress_NegativeTextColor:#32363a;--sapProgress_CriticalBackground:#fff;--sapProgress_CriticalBorderColor:#89919a;--sapProgress_CriticalTextColor:#32363a;--sapProgress_PositiveBackground:#fff;--sapProgress_PositiveBorderColor:#89919a;--sapProgress_PositiveTextColor:#32363a;--sapProgress_InformationBackground:#fff;--sapProgress_InformationBorderColor:#89919a;--sapProgress_InformationTextColor:#32363a;--sapProgress_Value_Background:#6a6d70;--sapProgress_Value_BorderColor:#89919a;--sapProgress_Value_TextColor:#32363a;--sapProgress_Value_NegativeBackground:#b00;--sapProgress_Value_NegativeBorderColor:#fff;--sapProgress_Value_NegativeTextColor:#32363a;--sapProgress_Value_CriticalBackground:#df6e0c;--sapProgress_Value_CriticalBorderColor:#fff;--sapProgress_Value_CriticalTextColor:#32363a;--sapProgress_Value_PositiveBackground:#107e3e;--sapProgress_Value_PositiveBorderColor:#fff;--sapProgress_Value_PositiveTextColor:#32363a;--sapProgress_Value_InformationBackground:#0a6ed1;--sapProgress_Value_InformationBorderColor:#fff;--sapProgress_Value_InformationTextColor:#32363a;--sapScrollBar_FaceColor:#949494;--sapScrollBar_TrackColor:#fff;--sapScrollBar_BorderColor:#949494;--sapScrollBar_SymbolColor:#0854a0;--sapScrollBar_Dimension:.75rem;--sapScrollBar_Hover_FaceColor:#8c8c8c;--sapSlider_Background:#89919a;--sapSlider_BorderColor:#89919a;--sapSlider_Selected_Background:#0854a0;--sapSlider_Selected_BorderColor:#0854a0;--sapSlider_HandleBackground:#fff;--sapSlider_HandleBorderColor:#89919a;--sapSlider_RangeHandleBackground:transparent;--sapSlider_Hover_HandleBackground:#ebf5fe;--sapSlider_Hover_HandleBorderColor:#0854a0;--sapSlider_Hover_RangeHandleBackground:#ebf5fe;--sapSlider_Active_HandleBackground:#0854a0;--sapSlider_Active_HandleBorderColor:#0854a0;--sapSlider_Active_RangeHandleBackground:transparent;--sapPageHeader_Background:#fff;--sapPageHeader_BorderColor:#d9d9d9;--sapPageHeader_TextColor:#32363a;--sapPageFooter_Background:#fff;--sapPageFooter_BorderColor:#d9d9d9;--sapPageFooter_TextColor:#32363a;--sapInfobar_Background:#0f828f;--sapInfobar_Hover_Background:#0e7581;--sapInfobar_Active_Background:#0a545c;--sapInfobar_NonInteractive_Background:#e6e6e6;--sapInfobar_TextColor:#fff;--sapObjectHeader_Background:#fff;--sapObjectHeader_Hover_Background:#f5f5f5;--sapObjectHeader_BorderColor:#d9d9d9;--sapObjectHeader_Title_TextColor:#32363a;--sapObjectHeader_Title_FontSize:1.25rem;--sapObjectHeader_Title_SnappedFontSize:1.25rem;--sapObjectHeader_Title_FontFamily:\\\"72\\\",\\\"72full\\\",Arial,Helvetica,sans-serif;--sapObjectHeader_Subtitle_TextColor:#6a6d70;--sapBlockLayer_Background:#000;--sapTile_Background:#fff;--sapTile_Hover_Background:#f5f5f5;--sapTile_Active_Background:#f5f5f5;--sapTile_BorderColor:transparent;--sapTile_BorderCornerRadius:.25rem;--sapTile_TitleTextColor:#32363a;--sapTile_TextColor:#6a6d70;--sapTile_IconColor:#5a7da0;--sapTile_SeparatorColor:#ccc;--sapTile_Interactive_BorderColor:#b3b3b3;--sapTile_OverlayBackground:rgba(0,0,0,0.8);--sapTile_OverlayForegroundColor:#fff;--sapAccentColor1:#d08014;--sapAccentColor2:#d04343;--sapAccentColor3:#db1f77;--sapAccentColor4:#c0399f;--sapAccentColor5:#6367de;--sapAccentColor6:#286eb4;--sapAccentColor7:#0f828f;--sapAccentColor8:#7ca10c;--sapAccentColor9:#925ace;--sapAccentColor10:#647987;--sapAccentBackgroundColor1:#fff3b8;--sapAccentBackgroundColor2:#ffd0e7;--sapAccentBackgroundColor3:#fff0fa;--sapAccentBackgroundColor4:#ffdcf3;--sapAccentBackgroundColor5:#ded3ff;--sapAccentBackgroundColor6:#d1efff;--sapAccentBackgroundColor7:#c2fcee;--sapAccentBackgroundColor8:#ebf5cb;--sapAccentBackgroundColor9:#dafdf5;--sapAccentBackgroundColor10:#eaecee;--sapIndicationColor_1:#800;--sapIndicationColor_1_Background:#800;--sapIndicationColor_1_BorderColor:#800;--sapIndicationColor_1_TextColor:#fff;--sapIndicationColor_1_Hover_Background:#6f0000;--sapIndicationColor_1_Active_Background:#500;--sapIndicationColor_1_Active_BorderColor:#800;--sapIndicationColor_1_Active_TextColor:#fff;--sapIndicationColor_1_Selected_Background:#500;--sapIndicationColor_1_Selected_BorderColor:#800;--sapIndicationColor_1_Selected_TextColor:#fff;--sapIndicationColor_1b:#fb9d9d;--sapIndicationColor_1b_BorderColor:#fb9d9d;--sapIndicationColor_1b_Hover_Background:#fa8585;--sapIndicationColor_2:#b00;--sapIndicationColor_2_Background:#b00;--sapIndicationColor_2_BorderColor:#b00;--sapIndicationColor_2_TextColor:#fff;--sapIndicationColor_2_Hover_Background:#a20000;--sapIndicationColor_2_Active_Background:#800;--sapIndicationColor_2_Active_BorderColor:#b00;--sapIndicationColor_2_Active_TextColor:#fff;--sapIndicationColor_2_Selected_Background:#800;--sapIndicationColor_2_Selected_BorderColor:#b00;--sapIndicationColor_2_Selected_TextColor:#fff;--sapIndicationColor_2b:#fcc4c4;--sapIndicationColor_2b_BorderColor:#fcc4c4;--sapIndicationColor_2b_Hover_Background:#fbacac;--sapIndicationColor_3:#df6e0c;--sapIndicationColor_3_Background:#df6e0c;--sapIndicationColor_3_BorderColor:#df6e0c;--sapIndicationColor_3_TextColor:#fff;--sapIndicationColor_3_Hover_Background:#d0670b;--sapIndicationColor_3_Active_Background:#c2600a;--sapIndicationColor_3_Active_BorderColor:#df6e0c;--sapIndicationColor_3_Active_TextColor:#fff;--sapIndicationColor_3_Selected_Background:#c2600a;--sapIndicationColor_3_Selected_BorderColor:#df6e0c;--sapIndicationColor_3_Selected_TextColor:#fff;--sapIndicationColor_3b:#fff2c0;--sapIndicationColor_3b_BorderColor:#fff2c0;--sapIndicationColor_3b_Hover_Background:#ffeda6;--sapIndicationColor_4:#107e3e;--sapIndicationColor_4_Background:#107e3e;--sapIndicationColor_4_BorderColor:#107e3e;--sapIndicationColor_4_TextColor:#fff;--sapIndicationColor_4_Hover_Background:#0d6733;--sapIndicationColor_4_Active_Background:#0a5128;--sapIndicationColor_4_Active_BorderColor:#107e3e;--sapIndicationColor_4_Active_TextColor:#fff;--sapIndicationColor_4_Selected_Background:#0a5128;--sapIndicationColor_4_Selected_BorderColor:#107e3e;--sapIndicationColor_4_Selected_TextColor:#fff;--sapIndicationColor_4b:#bae8bc;--sapIndicationColor_4b_BorderColor:#bae8bc;--sapIndicationColor_4b_Hover_Background:#a7e2a9;--sapIndicationColor_5:#0a6ed1;--sapIndicationColor_5_Background:#0a6ed1;--sapIndicationColor_5_BorderColor:#0a6ed1;--sapIndicationColor_5_TextColor:#fff;--sapIndicationColor_5_Hover_Background:#0961b9;--sapIndicationColor_5_Active_Background:#0854a0;--sapIndicationColor_5_Active_BorderColor:#0a6ed1;--sapIndicationColor_5_Active_TextColor:#fff;--sapIndicationColor_5_Selected_Background:#0854a0;--sapIndicationColor_5_Selected_BorderColor:#0a6ed1;--sapIndicationColor_5_Selected_TextColor:#fff;--sapIndicationColor_5b:#d3effd;--sapIndicationColor_5b_BorderColor:#d3effd;--sapIndicationColor_5b_Hover_Background:#bbe6fc;--sapIndicationColor_6:#0f828f;--sapIndicationColor_6_Background:#0f828f;--sapIndicationColor_6_BorderColor:#0f828f;--sapIndicationColor_6_TextColor:#fff;--sapIndicationColor_6_Hover_Background:#0d6d78;--sapIndicationColor_6_Active_Background:#0a5861;--sapIndicationColor_6_Active_BorderColor:#0f828f;--sapIndicationColor_6_Active_TextColor:#fff;--sapIndicationColor_6_Selected_Background:#0a5861;--sapIndicationColor_6_Selected_BorderColor:#0f828f;--sapIndicationColor_6_Selected_TextColor:#fff;--sapIndicationColor_6b:#cdf5ec;--sapIndicationColor_6b_BorderColor:#cdf5ec;--sapIndicationColor_6b_Hover_Background:#b8f1e4;--sapIndicationColor_7:#925ace;--sapIndicationColor_7_Background:#925ace;--sapIndicationColor_7_BorderColor:#925ace;--sapIndicationColor_7_TextColor:#fff;--sapIndicationColor_7_Hover_Background:#8546c8;--sapIndicationColor_7_Active_Background:#7838bd;--sapIndicationColor_7_Active_BorderColor:#925ace;--sapIndicationColor_7_Active_TextColor:#fff;--sapIndicationColor_7_Selected_Background:#7838bd;--sapIndicationColor_7_Selected_BorderColor:#925ace;--sapIndicationColor_7_Selected_TextColor:#fff;--sapIndicationColor_7b:#e2dbff;--sapIndicationColor_7b_BorderColor:#e2dbff;--sapIndicationColor_7b_Hover_Background:#cdc2ff;--sapIndicationColor_8:#c0399f;--sapIndicationColor_8_Background:#c0399f;--sapIndicationColor_8_BorderColor:#c0399f;--sapIndicationColor_8_TextColor:#fff;--sapIndicationColor_8_Hover_Background:#ac338f;--sapIndicationColor_8_Active_Background:#992d7e;--sapIndicationColor_8_Active_BorderColor:#c0399f;--sapIndicationColor_8_Active_TextColor:#fff;--sapIndicationColor_8_Selected_Background:#992d7e;--sapIndicationColor_8_Selected_BorderColor:#c0399f;--sapIndicationColor_8_Selected_TextColor:#fff;--sapIndicationColor_8b:#f8d6ff;--sapIndicationColor_8b_BorderColor:#f8d6ff;--sapIndicationColor_8b_Hover_Background:#f4bdff;--sapIndicationColor_9:#1d2d3e;--sapIndicationColor_9_Background:#1d2d3e;--sapIndicationColor_9_BorderColor:#1d2d3e;--sapIndicationColor_9_TextColor:#fff;--sapIndicationColor_9_Hover_Background:#15202d;--sapIndicationColor_9_Active_Background:#0d141b;--sapIndicationColor_9_Active_BorderColor:#1d2d3e;--sapIndicationColor_9_Active_TextColor:#fff;--sapIndicationColor_9_Selected_Background:#0d141b;--sapIndicationColor_9_Selected_BorderColor:#1d2d3e;--sapIndicationColor_9_Selected_TextColor:#fff;--sapIndicationColor_9b:#fff;--sapIndicationColor_9b_BorderColor:#d9d9d9;--sapIndicationColor_9b_Hover_Background:#f2f2f2;--sapIndicationColor_10:#45484a;--sapIndicationColor_10_Background:#45484a;--sapIndicationColor_10_BorderColor:#45484a;--sapIndicationColor_10_TextColor:#fff;--sapIndicationColor_10_Hover_Background:#393b3d;--sapIndicationColor_10_Active_Background:#2c2e30;--sapIndicationColor_10_Active_BorderColor:#45484a;--sapIndicationColor_10_Active_TextColor:#fff;--sapIndicationColor_10_Selected_Background:#2c2e30;--sapIndicationColor_10_Selected_BorderColor:#45484a;--sapIndicationColor_10_Selected_TextColor:#fff;--sapIndicationColor_10b:#eaecee;--sapIndicationColor_10b_BorderColor:#eaecee;--sapIndicationColor_10b_Hover_Background:#dcdfe3;--sapLegend_WorkingBackground:#fafafa;--sapLegend_NonWorkingBackground:#dedede;--sapLegend_CurrentDateTime:#c0399f;--sapLegendColor1:#d58215;--sapLegendColor2:#dc5b5b;--sapLegendColor3:#db1f77;--sapLegendColor4:#9b3b3b;--sapLegendColor5:#cf5db3;--sapLegendColor6:#286eb4;--sapLegendColor7:#1193a2;--sapLegendColor8:#8b9668;--sapLegendColor9:#647987;--sapLegendColor10:#892971;--sapLegendColor11:#725a3a;--sapLegendColor12:#bb2f2f;--sapLegendColor13:#bc1b66;--sapLegendColor14:#8b714f;--sapLegendColor15:#606190;--sapLegendColor16:#597da1;--sapLegendColor17:#49797e;--sapLegendColor18:#687a33;--sapLegendColor19:#295989;--sapLegendColor20:#5154bd;--sapLegendBackgroundColor1:#fdf3e7;--sapLegendBackgroundColor2:#faeaea;--sapLegendBackgroundColor3:#fce9f2;--sapLegendBackgroundColor4:#f8ecec;--sapLegendBackgroundColor5:#f9ebf5;--sapLegendBackgroundColor6:#ebf3fa;--sapLegendBackgroundColor7:#e8fbfd;--sapLegendBackgroundColor8:#f3f4ef;--sapLegendBackgroundColor9:#f1f3f4;--sapLegendBackgroundColor10:#f9ebf6;--sapLegendBackgroundColor11:#f6f2ed;--sapLegendBackgroundColor12:#faeaea;--sapLegendBackgroundColor13:#fce9f2;--sapLegendBackgroundColor14:#f5f2ee;--sapLegendBackgroundColor15:#f0f0f5;--sapLegendBackgroundColor16:#eff2f6;--sapLegendBackgroundColor17:#eff5f6;--sapLegendBackgroundColor18:#f5f7ed;--sapLegendBackgroundColor19:#ebf2f9;--sapLegendBackgroundColor20:#ecedf8;--sapChart_OrderedColor_1:#438cd5;--sapChart_OrderedColor_2:#e66729;--sapChart_OrderedColor_3:#16976c;--sapChart_OrderedColor_4:#ed4a7b;--sapChart_OrderedColor_5:#945ecf;--sapChart_OrderedColor_6:#1193a2;--sapChart_OrderedColor_7:#525df4;--sapChart_OrderedColor_8:#bf399e;--sapChart_OrderedColor_9:#6c8893;--sapChart_OrderedColor_10:#ed5f5f;--sapChart_OrderedColor_11:#2f6497;--sapChart_Bad:#dc0d0e;--sapChart_Critical:#cb7d0c;--sapChart_Good:#3c9d57;--sapChart_Neutral:#848f94;--sapChart_Sequence_1:#438cd5;--sapChart_Sequence_2:#e66729;--sapChart_Sequence_3:#16976c;--sapChart_Sequence_4:#ed4a7b;--sapChart_Sequence_5:#945ecf;--sapChart_Sequence_6:#1193a2;--sapChart_Sequence_7:#525df4;--sapChart_Sequence_8:#bf399e;--sapChart_Sequence_9:#6c8893;--sapChart_Sequence_10:#ed5f5f;--sapChart_Sequence_11:#2f6497;--sapChart_Sequence_Neutral:#848f94;}\" };\nexport default styleData;\n//# sourceMappingURL=parameters-bundle.css.js.map"],"names":["whenDOMReady","resolve","styleData","insertFontFace","openUI5Support","getFeature","insertMainFontFace","insertOverrideFontFace","hasStyle","createStyle","fontFaceCSS","overrideFontFaceCSS","insertSystemCSSVars","systemCSSVars","booted","bootPromise","eventProvider","EventProvider","boot","__async","bootExecutor","attachThemeRegistered","onThemeRegistered","registerCurrentRuntime","isOpenUI5Loaded","f6Navigation","applyTheme","getTheme","theme","currentTheme","kebabToCamelMap","camelToKebabMap","kebabToCamelCase","string","result","toCamelCase","camelToKebabCase","parts","index","getSlotName","node","slot","match","getSlottedNodes","item","getSlottedNodesList","nodeList","acc","curr","UI5ElementMetadata","metadata","initialState","slotsAreManaged","props","propName","propType","propDefaultValue","slots","slotName","slotData","propertyName","value","propData","propValue","validateSingleProperty","validateSingleSlot","pureTag","suffix","getEffectiveScopingSuffixForTag","defaultSlot","type","name","config","propertyType","propertyValidator","el","StaticArea","getEventProvider","getSharedResource","CUSTOM_CSS_CHANGE","attachCustomCSSChange","listener","getCustomCSSFor","tag","reRenderAllUI5Elements","getCustomCSS","customCSSFor","MAX_DEPTH_INHERITED_CLASSES","getStylesString","styles","style","effectiveStyleMap","getEffectiveStyle","ElementClass","forStaticArea","key","openUI5Enablement","effectiveStyle","busyIndicatorStyles","customStyle","constructableStyleMap","getConstructableStyle","styleContent","updateShadowRoot","element","styleStrOrHrefsArr","ctor","shadowRoot","renderResult","GLOBAL_CONTENT_DENSITY_CSS_VAR","getEffectiveContentDensity","getDesigntimePropertyAsArray","m","M_ISO639_OLD_TO_NEW","A_RTL_LOCALES","impliesRTL","language","getRTL","configurationRTL","getConfiguredRTL","getLanguage","detectNavigatorLanguage","GLOBAL_DIR_CSS_VAR","getEffectiveDir","doc","dirValues","locallyAppliedDir","getEffectiveDir$1","pureTagName","popupIntegrationAttr","StaticAreaItem","ownerElement","dir","renderFinished","observers","observeDOMNode","callback","options","observer","unobserveDOMNode","excludeList","noConflict","shouldFireOriginalEvent","eventName","shouldNotFireOriginalEvent","nc","getNoConflict","getConfiguredNoConflict","skipOriginalEvent","allowList","isValidPropertyName","klass","arraysAreEqual","arr1","arr2","i","executeTemplate","template","component","tagsToScope","getTagsToScope","scope","getCustomElementsScopingSuffix","componentTag","dep","shouldScopeCustomElement","executeTemplate$1","autoId","elementTimeouts","uniqueDependenciesCache","_invalidate","changeInfo","renderDeferred","__spreadProps","__spreadValues","UI5Element","deferredResolve","renderImmediately","cancelRender","canSlotText","mutationObserverOptions","slotsMap","domChildren","slotsCachedContentMap","propertyNameToSlotMap","autoIncrementMap","slottedChildrenMap","allChildrenUpgraded","child","idx","validValues","nextIndex","localName","whenDefinedPromise","timeoutPromise","instanceOfUI5Element","childChangeListener","children","a","b","_","invalidated","childChangeInfo","oldValue","newValue","newPropertyValue","properties","realName","nameInCamelCase","attrName","attrValue","newAttrValue","slotChangeListener","hasIndividualSlots","domRef","focusOptions","focusDomRef","data","cancelable","bubbles","eventResult","camelCaseEventName","noConflictEvent","noConflictEventResult","normalEvent","markAsRtlAware","getSingletonElementInstance","proto","prop","isDifferent","oldState","filtered","deps","definedLocally","isTagRegistered","definedGlobally","recordTagRegistrationFailure","registerTag","metadataObjects","mergedMetadata","merge","object","customElement","tagNameOrComponentSettings","target","languageAware","themeAware","fastNavigation","customElementEntity","customElementEntityValue","property","propertyKey","propsMetadata","l","t","e","r","s","o","n","effectiveHtml","strings","values","litStatic","html","effectiveSvg","svg","litRender","templateResult","container","href","render","scopeTag","tags"],"mappings":"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"}